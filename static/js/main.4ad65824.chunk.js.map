{"version":3,"sources":["actions/ItemActions.jsx","reducers/ItemReducer.jsx","reducers/StationReducer.jsx","actions/stationActions.jsx","actions/ItemStationActions.jsx","reducers/ItemStationReducer.jsx","actions/ItemDetailActions.jsx","reducers/ItemDetailReducer.jsx","reducers/index.jsx","configureStore.jsx","components/Header/Header.jsx","components/Table/EnhancedTableHead.jsx","components/Breadcrumbs/ItemBreadcrumbs.jsx","components/Item/ItemInfo.jsx","components/Avatar/ItemAvatar.jsx","components/Item/ItemRow.jsx","components/Item/ItemTable.jsx","components/Search/SearchForm.jsx","components/Filter/FilterForm.jsx","components/Item/ItemPage.jsx","components/ItemStation/ItemStationCharts.jsx","components/Credit/Credit.jsx","components/ItemStation/ItemChart.jsx","components/ItemStation/ItemInfo.jsx","components/ItemStation/ItemStationRow.jsx","components/ItemStation/ItemStationTable.jsx","components/Button/BackButton.jsx","components/ItemStation/ItemStationPage.jsx","components/Station/StationPanel.jsx","components/Station/StationRow.jsx","components/Station/StationTable.jsx","components/Station/StationPage.jsx","components/ItemDetail/ItemChart.jsx","components/ItemDetail/StationInfo.jsx","components/ItemDetail/ItemDetailRow.jsx","components/ItemDetail/ItemDetailTable.jsx","components/ItemDetail/ItemDetailPage.jsx","App.jsx","index.js"],"names":["fetchItemsSuccess","items","type","payload","fetchItemsFailure","error","fetchItems","filters","dispatch","Axios","get","process","params","then","response","data","catch","message","ItemReducer","state","loading","search","action","selectItem","StationReducer","stations","fetchItemsStationFailure","fetchItemsStationSuccess","station","fetchItemPricesStationFailure","fetchItemPricesStationSuccess","stationId","itemId","prices","transactionType","fetchItemsByStation","map","item","fetchItemSellPricesByStation","id","fetchItemBuyPricesByStation","fetchItemPricesByStation","clone","require","ItemStationReducer","seriesChart","newStation","find","price","value","parseFloat","name","Object","keys","parseInt","combinedSerie","newItems","undefined","sellDataPrice","length","moment","valueOf","currentSellingPrice","ItemDetailReducer","imgPath","subCategory","category","newItem","currentPrice","previousPrice","selectStation","allReducers","combineReducers","itemsStation","itemDetail","enhancer","composeEnhancers","compose","applyMiddleware","thunk","store","createStore","useStyles","makeStyles","theme","offset","mixins","toolbar","title","flexGrow","Header","classes","AppBar","Container","Toolbar","Typography","variant","className","Button","component","RouterLink","to","color","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","width","EnhancedTableHead","headCells","order","orderBy","onRequestSort","TableHead","TableRow","headCell","TableCell","key","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","ItemBreadcrumbs","Breadcrumbs","aria-label","gutterBottom","section1","spacing","avatar","ItemInfo","Box","display","justifyContent","Avatar","src","description","ItemAvatar","drawer","button","ItemRow","useDispatch","useState","setDrawer","toggleDrawer","open","hover","ButtonGroup","size","Drawer","anchor","onClose","role","onKeyDown","ItemTable","useSelector","filteredItems","setFilteredItems","setOrder","setOrderBy","descendingComparator","a","b","useEffect","lowercasedFilter","toLowerCase","itemFilters","filter","some","includes","Number","TableContainer","Paper","Table","rowCount","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","SearchForm","searchHandler","TextField","InputProps","startAdornment","InputAdornment","fullWidth","onChange","FilterForm","applyFilter","categories","setCategories","subCategories","setSubCategories","types","setTypes","selectedCategories","setSelectedCategories","selectedSubCategories","setSelectedSubCategories","selectedTypes","setSelectedTypes","firstLoad","setFirstLoad","setData","console","log","categoriesList","subCategoriesList","typesList","dataCategory","dataSubCategory","dataType","extractValues","rawValues","values","Grid","md","xs","Autocomplete","multiple","options","getOptionLabel","option","newValue","getOptionSelected","renderInput","placeholder","ItemPage","container","target","combinedFilters","ItemStationCharts","series","optionsChart","chart","locales","fr","defaultLocale","animations","enabled","zoom","autoScaleYaxis","xaxis","stroke","curve","markers","dataLabels","optionsBrush","selection","min","subtract","max","brush","tooltip","yaxis","tickAmount","legend","show","Skeleton","animation","moneyImage","Credit","previousValue","moneyFont","alignItems","alt","TrendingDown","style","red","TrendingUp","green","TrendingFlat","ItemChart","dataPrice","grid","right","left","labels","Divider","previousSellingPrice","currentBuyingPrice","previousBuyingPrice","buyDataPrice","ItemStationRow","selectItemStation","Link","sellPrices","dataKey","strokeWidth","dot","isAnimationActive","hide","domain","buyPrices","ItemStationTable","BackButton","history","useHistory","goBack","ItemStationPage","useParams","StationPanel","StationRow","StationTable","filteredStations","setFilteredStations","stationFilters","StationPage","fetchStationsFailure","StationInfo","ItemDetailRow","selectStationDetail","ItemDetailTable","ItemDetailPage","fetchItemDetailFailure","marginTop","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ad65824.chunk.js","sourcesContent":["import Axios from \"axios\";\r\n\r\nexport const FETCH_ITEMS_REQUEST = 'FETCH_ITEMS_REQUEST';\r\nexport const FETCH_ITEMS_SUCCESS = 'FETCH_ITEMS_SUCCESS';\r\nexport const FETCH_ITEMS_FAILURE = 'FETCH_ITEMS_FAILURE';\r\nexport const SEARCH_ITEM = 'SEARCH_ITEM';\r\nexport const SELECT_ITEM = 'SELECT_ITEM';\r\n\r\nconst fetchItemsRequest = () => {\r\n    return {\r\n        type: FETCH_ITEMS_REQUEST\r\n    }\r\n};\r\n\r\nconst fetchItemsSuccess = items => {\r\n    return {\r\n        type: FETCH_ITEMS_SUCCESS,\r\n        payload: items\r\n    }\r\n};\r\n\r\nconst fetchItemsFailure = error => {\r\n    return {\r\n        type: FETCH_ITEMS_FAILURE,\r\n        payload: error\r\n    }\r\n};\r\n\r\nexport const searchItem = search => {\r\n    return  {\r\n        type: SEARCH_ITEM,\r\n        payload: search\r\n    }\r\n};\r\n\r\nexport const selectItem = item => {\r\n    return {\r\n        type: SELECT_ITEM,\r\n        payload: item\r\n    }\r\n}\r\n\r\nexport const fetchItems = (filters = {}) => {\r\n    return (dispatch) => {\r\n        dispatch(fetchItemsRequest());\r\n        Axios.get(`${process.env.REACT_APP_API_URI}/api/item`, {params: filters})\r\n            .then(response => {\r\n                dispatch(fetchItemsSuccess(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchItemsFailure(error.message));\r\n            })\r\n    }\r\n};\r\n","import {\r\n    FETCH_ITEMS_FAILURE,\r\n    FETCH_ITEMS_REQUEST,\r\n    FETCH_ITEMS_SUCCESS,\r\n    SEARCH_ITEM,\r\n    SELECT_ITEM,\r\n} from \"../actions/ItemActions\";\r\n\r\nconst ItemReducer = (state = {items: [], loading: false, search: null}, action) => {\r\n    switch (action.type) {\r\n        case FETCH_ITEMS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case FETCH_ITEMS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                items: action.payload,\r\n                error: ''\r\n            };\r\n        case FETCH_ITEMS_FAILURE:\r\n            return {\r\n                loading: false,\r\n                items: [],\r\n                error: action.payload\r\n            };\r\n        case SEARCH_ITEM:\r\n            return {\r\n                ...state,\r\n                search: action.payload\r\n            }\r\n        case SELECT_ITEM:\r\n            return {\r\n                ...state,\r\n                selectItem: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ItemReducer;","import {\r\n    FETCH_STATIONS_REQUEST,\r\n    FETCH_STATIONS_SUCCESS,\r\n    FETCH_STATIONS_FAILURE,\r\n    SEARCH_STATION,\r\n} from \"../actions/stationActions\";\r\n\r\nconst StationReducer = (state = {stations: [], loading: false, search: null}, action) => {\r\n    switch (action.type) {\r\n        case FETCH_STATIONS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case FETCH_STATIONS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                stations: action.payload,\r\n                error: ''\r\n            };\r\n        case FETCH_STATIONS_FAILURE:\r\n            return {\r\n                loading: false,\r\n                stations: [],\r\n                error: action.payload\r\n            };\r\n        case SEARCH_STATION:\r\n            return {\r\n                ...state,\r\n                search: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default StationReducer;","import Axios from \"axios\";\r\n\r\nexport const FETCH_STATIONS_REQUEST = 'FETCH_STATIONS_REQUEST';\r\nexport const FETCH_STATIONS_SUCCESS = 'FETCH_STATIONS_SUCCESS';\r\nexport const FETCH_STATIONS_FAILURE = 'FETCH_STATIONS_FAILURE';\r\nexport const SEARCH_STATION = 'SEARCH_STATION';\r\n\r\nconst fetchStationsRequest = () => {\r\n    return {\r\n        type: FETCH_STATIONS_REQUEST\r\n    }\r\n};\r\n\r\nconst fetchStationsSuccess = stations => {\r\n    return {\r\n        type: FETCH_STATIONS_SUCCESS,\r\n        payload: stations\r\n    }\r\n};\r\n\r\nconst fetchStationsFailure = error => {\r\n    return {\r\n        type: FETCH_STATIONS_FAILURE,\r\n        payload: error\r\n    }\r\n};\r\n\r\nexport const searchStation = search => {\r\n    return  {\r\n        type: SEARCH_STATION,\r\n        payload: search\r\n    }\r\n};\r\n\r\nexport const fetchStations= () => {\r\n    return (dispatch) => {\r\n        dispatch(fetchStationsRequest());\r\n        Axios.get(`${process.env.REACT_APP_API_URI}/api/station`)\r\n            .then(response => {\r\n                dispatch(fetchStationsSuccess(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchStationsFailure(error.message));\r\n            })\r\n    }\r\n};\r\n","import Axios from \"axios\";\r\n\r\nexport const FETCH_ITEMS_STATION_REQUEST = 'FETCH_ITEMS_STATION_REQUEST';\r\nexport const FETCH_ITEMS_STATION_SUCCESS = 'FETCH_ITEMS_STATION_SUCCESS';\r\nexport const FETCH_ITEMS_STATION_FAILURE = 'FETCH_ITEMS_STATION_FAILURE';\r\nexport const FETCH_ITEM_PRICES_STATION_REQUEST = 'FETCH_ITEM_PRICES_STATION_REQUEST';\r\nexport const FETCH_ITEM_PRICES_STATION_SUCCESS = 'FETCH_ITEM_PRICES_STATION_SUCCESS';\r\nexport const FETCH_ITEM_PRICES_STATION_FAILURE = 'FETCH_ITEM_PRICES_STATION_FAILURE';\r\nexport const COMBINE_SERIES_CHART = 'COMBINE_SERIES_CHART'\r\nexport const CLEAR_ITEMS_STATION = 'CLEAR_ITEMS_STATION';\r\nexport const SEARCH_ITEM_STATION = 'SEARCH_ITEM_STATION';\r\nexport const SELECT_ITEM_STATION = 'SELECT_ITEM_STATION';\r\nexport const TRANSACTION_TYPE_SELL = 'sell'\r\nexport const TRANSACTION_TYPE_BUY = 'buy'\r\n\r\nconst fetchItemsStationRequest = () => {\r\n    return {\r\n        type: FETCH_ITEMS_STATION_REQUEST\r\n    }\r\n};\r\n\r\nconst fetchItemsStationFailure = error => {\r\n    return {\r\n        type: FETCH_ITEMS_STATION_FAILURE,\r\n        payload: error\r\n    }\r\n};\r\n\r\n\r\nconst fetchItemsStationSuccess = station => {\r\n    return {\r\n        type: FETCH_ITEMS_STATION_SUCCESS,\r\n        payload: station\r\n    }\r\n};\r\n\r\nconst fetchItemPricesStationRequest = () => {\r\n    return {\r\n        type: FETCH_ITEM_PRICES_STATION_REQUEST\r\n    }\r\n};\r\n\r\nconst fetchItemPricesStationFailure = error => {\r\n    return {\r\n        type: FETCH_ITEM_PRICES_STATION_FAILURE,\r\n        payload: error\r\n    }\r\n};\r\n\r\n\r\nconst fetchItemPricesStationSuccess = ( stationId, itemId, prices, transactionType ) => {\r\n    return {\r\n        type: FETCH_ITEM_PRICES_STATION_SUCCESS,\r\n        stationId,\r\n        itemId,\r\n        prices,\r\n        transactionType\r\n    }\r\n}\r\n\r\nexport const clearItemsStation = () => {\r\n    return {\r\n        type: CLEAR_ITEMS_STATION\r\n    }\r\n}\r\n\r\nexport const searchItemStation = search => {\r\n    return  {\r\n        type: SEARCH_ITEM_STATION,\r\n        payload: search\r\n    }\r\n};\r\n\r\nexport const selectItemStation = item => {\r\n    return {\r\n        type: SELECT_ITEM_STATION,\r\n        payload: item\r\n    }\r\n}\r\n\r\nexport const combineSeriesChart = () => {\r\n    return {\r\n        type: COMBINE_SERIES_CHART\r\n    }\r\n}\r\n\r\nexport const fetchItemsByStation = (stationId, filters = {}) => {\r\n    return (dispatch) => {\r\n        dispatch(fetchItemsStationRequest());\r\n        Axios.get(`${process.env.REACT_APP_API_URI}/api/station/${stationId}`, {params: filters})\r\n            .then(response => {\r\n                dispatch(fetchItemsStationSuccess(response.data));\r\n                response.data.items.map(item => {\r\n                    dispatch(fetchItemSellPricesByStation(stationId, item.id))\r\n                    dispatch(fetchItemBuyPricesByStation(stationId, item.id))\r\n                    return item\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchItemsStationFailure(error.message));\r\n            })\r\n    }\r\n};\r\n\r\nconst fetchItemSellPricesByStation = (stationId, itemId) => {\r\n    return fetchItemPricesByStation(stationId, itemId, TRANSACTION_TYPE_SELL);\r\n}\r\n\r\nconst fetchItemBuyPricesByStation = (stationId, itemId) => {\r\n    return fetchItemPricesByStation(stationId, itemId, TRANSACTION_TYPE_BUY);\r\n}\r\n\r\nconst fetchItemPricesByStation = (stationId, itemId, type = TRANSACTION_TYPE_SELL) => {\r\n    return (dispatch) => {\r\n        dispatch(fetchItemPricesStationRequest());\r\n        Axios.get(`${process.env.REACT_APP_API_URI}/api/price/${type}/item/${itemId}/station/${stationId}`)\r\n            .then(response => {\r\n                dispatch(fetchItemPricesStationSuccess(stationId, itemId, response.data, type));\r\n                if (TRANSACTION_TYPE_SELL === type) {\r\n                    dispatch(combineSeriesChart())\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchItemPricesStationFailure(error.message));\r\n            })\r\n    }\r\n}\r\n","import {\r\n    FETCH_ITEMS_STATION_REQUEST,\r\n    FETCH_ITEMS_STATION_SUCCESS,\r\n    FETCH_ITEMS_STATION_FAILURE,\r\n    FETCH_ITEM_PRICES_STATION_REQUEST,\r\n    FETCH_ITEM_PRICES_STATION_SUCCESS,\r\n    CLEAR_ITEMS_STATION,\r\n    SELECT_ITEM_STATION,\r\n    SEARCH_ITEM_STATION,\r\n    FETCH_ITEM_PRICES_STATION_FAILURE,\r\n    COMBINE_SERIES_CHART,\r\n} from \"../actions/ItemStationActions\";\r\nimport moment from 'moment';\r\n\r\nconst clone = require('rfdc')()\r\n\r\nconst ItemStationReducer = (\r\n        state = {\r\n                station: {\r\n                    items:[]\r\n                },\r\n                loading: false,\r\n                search: null,\r\n                seriesChart: [],\r\n                error: null,\r\n            }\r\n        , action\r\n    ) => {\r\n    switch (action.type) {\r\n        case FETCH_ITEMS_STATION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case FETCH_ITEMS_STATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                station: action.payload,\r\n                error: null\r\n            };\r\n        case FETCH_ITEMS_STATION_FAILURE:\r\n            return {\r\n                loading: false,\r\n                station: [],\r\n                error: action.payload\r\n            };\r\n        case FETCH_ITEM_PRICES_STATION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case FETCH_ITEM_PRICES_STATION_SUCCESS:\r\n            const newStation = clone(state.station)\r\n            let item = newStation.items.find(item => item.id === action.itemId);\r\n            \r\n            action.prices.map(price => {\r\n                price.value = parseFloat(price.value)\r\n                return price\r\n            })\r\n\r\n            item[`${action.transactionType}Prices`] = action.prices\r\n        \r\n            item[`${action.transactionType}DataPrice`] = {\r\n                name: item.name,\r\n                data: Object.keys(action.prices).map(function(name){\r\n                    return [parseInt(action.prices[name]['date']), action.prices[name]['value']];\r\n                })\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                station: newStation,\r\n            };\r\n        case FETCH_ITEM_PRICES_STATION_FAILURE:\r\n            return {\r\n                loading: false,\r\n                station: [],\r\n                error: action.payload\r\n            };\r\n        case CLEAR_ITEMS_STATION:\r\n            return {\r\n                loading: false,\r\n                station: {\r\n                    items: []\r\n                },\r\n                seriesChart: [],\r\n            }\r\n        case SEARCH_ITEM_STATION:\r\n            return {\r\n                ...state,\r\n                search: action.payload\r\n            }\r\n        case SELECT_ITEM_STATION:\r\n            return {\r\n                ...state,\r\n                selectItem: action.payload\r\n            }\r\n        case COMBINE_SERIES_CHART:\r\n            let combinedSerie = []\r\n            const items = state.station.items\r\n            const newItems = clone(items)\r\n\r\n            newItems.map(item => {\r\n                if (item.sellDataPrice !== undefined && item.sellDataPrice.data.length > 0)  {\r\n                    item.sellDataPrice.data = [...item.sellDataPrice.data, [moment().valueOf(), parseFloat(item.currentSellingPrice)]]\r\n                    combinedSerie = [...combinedSerie, item.sellDataPrice]\r\n                }\r\n                return item\r\n            })\r\n            return {\r\n                ...state,\r\n                seriesChart: combinedSerie\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ItemStationReducer;","import Axios from \"axios\";\r\n\r\nexport const FETCH_ITEM_DETAIL_REQUEST = 'FETCH_ITEM_DETAIL_REQUEST';\r\nexport const FETCH_ITEM_DETAIL_SUCCESS = 'FETCH_ITEM_DETAIL_SUCCESS';\r\nexport const FETCH_ITEM_DETAIL_FAILURE = 'FETCH_ITEM_DETAIL_FAILURE';\r\nexport const FETCH_ITEM_DETAIL_PRICES_REQUEST = 'FETCH_ITEM_DETAIL_PRICES_REQUEST';\r\nexport const FETCH_ITEM_DETAIL_PRICES_SUCCESS = 'FETCH_ITEM_DETAIL_PRICES_SUCCESS';\r\nexport const FETCH_ITEM_DETAIL_PRICES_FAILURE = 'FETCH_ITEM_DETAIL_PRICES_FAILURE';\r\nexport const CLEAR_ITEM_DETAIL = 'CLEAR_ITEM_DETAIL';\r\nexport const SEARCH_ITEM_DETAIL = 'SEARCH_ITEM_DETAIL';\r\nexport const SELECT_STATION_DETAIL = 'SELECT_STATION_DETAIL';\r\nexport const TRANSACTION_TYPE_SELL = 'sell'\r\nexport const TRANSACTION_TYPE_BUY = 'buy'\r\n\r\nconst fetchItemDetailRequest = () => {\r\n    return {\r\n        type: FETCH_ITEM_DETAIL_REQUEST\r\n    }\r\n};\r\n\r\nconst fetchItemDetailSuccess = item => {\r\n    return {\r\n        type: FETCH_ITEM_DETAIL_SUCCESS,\r\n        payload: item\r\n    }\r\n};\r\n\r\nconst fetchItemDetailFailure = error => {\r\n    return {\r\n        type: FETCH_ITEM_DETAIL_FAILURE,\r\n        payload: error\r\n    }\r\n};\r\n\r\nconst fetchItemPricesStationRequest = () => {\r\n    return {\r\n        type: FETCH_ITEM_DETAIL_PRICES_REQUEST\r\n    }\r\n};\r\n\r\nconst fetchItemPricesStationFailure = error => {\r\n    return {\r\n        type: FETCH_ITEM_DETAIL_PRICES_FAILURE,\r\n        payload: error\r\n    }\r\n};\r\n\r\n\r\nconst fetchItemPricesStationSuccess = ( stationId, itemId, prices, transactionType ) => {\r\n    return {\r\n        type: FETCH_ITEM_DETAIL_PRICES_SUCCESS,\r\n        stationId,\r\n        itemId,\r\n        prices,\r\n        transactionType\r\n    }\r\n}\r\n\r\nexport const searchItemDetail = search => {\r\n    return  {\r\n        type: SEARCH_ITEM_DETAIL,\r\n        payload: search\r\n    }\r\n};\r\n\r\nexport const clearItemDetail = () => {\r\n    return {\r\n        type: CLEAR_ITEM_DETAIL\r\n    }\r\n}\r\n\r\nexport const selectStationDetail = station => {\r\n    return {\r\n        type: SELECT_STATION_DETAIL,\r\n        payload: station\r\n    }\r\n}\r\n\r\nexport const fetchItemDetail = itemId => {\r\n    return (dispatch) => {\r\n        dispatch(fetchItemDetailRequest());\r\n        Axios.get(`${process.env.REACT_APP_API_URI}/api/item/${itemId}`)\r\n            .then(response => {\r\n                dispatch(fetchItemDetailSuccess(response.data));\r\n                response.data.stations.map(station => {\r\n                    dispatch(fetchItemSellPricesByStation(station.id, response.data.id))\r\n                    dispatch(fetchItemBuyPricesByStation(station.id, response.data.id))\r\n                    return station\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchItemDetailFailure(error.message));\r\n            })\r\n    }\r\n};\r\n\r\nconst fetchItemSellPricesByStation = (stationId, itemId) => {\r\n    return fetchItemPricesByStation(stationId, itemId, TRANSACTION_TYPE_SELL);\r\n}\r\n\r\nconst fetchItemBuyPricesByStation = (stationId, itemId) => {\r\n    return fetchItemPricesByStation(stationId, itemId, TRANSACTION_TYPE_BUY);\r\n}\r\n\r\nconst fetchItemPricesByStation = (stationId, itemId, type = TRANSACTION_TYPE_SELL) => {\r\n    return (dispatch) => {\r\n        dispatch(fetchItemPricesStationRequest());\r\n        Axios.get(`${process.env.REACT_APP_API_URI}/api/price/${type}/item/${itemId}/station/${stationId}`)\r\n            .then(response => {\r\n                dispatch(fetchItemPricesStationSuccess(stationId, itemId, response.data, type));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchItemPricesStationFailure(error.message));\r\n            })\r\n    }\r\n}","import {\r\n    FETCH_ITEM_DETAIL_REQUEST,\r\n    FETCH_ITEM_DETAIL_SUCCESS,\r\n    FETCH_ITEM_DETAIL_FAILURE,\r\n    SEARCH_ITEM_DETAIL,\r\n    CLEAR_ITEM_DETAIL,\r\n    FETCH_ITEM_DETAIL_PRICES_REQUEST,\r\n    FETCH_ITEM_DETAIL_PRICES_SUCCESS,\r\n    FETCH_ITEM_DETAIL_PRICES_FAILURE,\r\n    SELECT_STATION_DETAIL,\r\n    TRANSACTION_TYPE_SELL,\r\n} from \"../actions/ItemDetailActions\";\r\n\r\n\r\nconst ItemDetailReducer = (\r\n        state = {\r\n            item: {\r\n                imgPath: null,\r\n                stations: [],\r\n                type: {\r\n                    name: null,\r\n                    subCategory: {\r\n                        name: null,\r\n                        category: {\r\n                            name: null\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            loading: false,\r\n            search: null\r\n            }\r\n        , action\r\n    ) => {\r\n    switch (action.type) {\r\n        case FETCH_ITEM_DETAIL_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case FETCH_ITEM_DETAIL_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                item: action.payload,\r\n                error: ''\r\n            };\r\n        case FETCH_ITEM_DETAIL_FAILURE:\r\n            return {\r\n                loading: false,\r\n                item: [],\r\n                error: action.payload\r\n            };\r\n        case FETCH_ITEM_DETAIL_PRICES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case FETCH_ITEM_DETAIL_PRICES_SUCCESS:\r\n            const clone = require('rfdc')()\r\n            const newItem = clone(state.item)\r\n            let station = newItem.stations.find(station => station.id === action.stationId);\r\n            \r\n            action.prices.map(price => {\r\n                price.value = parseFloat(price.value)\r\n                return price\r\n            })\r\n\r\n            station[`${action.transactionType}Prices`] = action.prices\r\n        \r\n            station[`${action.transactionType}DataPrice`] = {\r\n                name: station.name,\r\n                data: Object.keys(action.prices).map(function(name){\r\n                    return [parseInt(action.prices[name]['date']), action.prices[name]['value']];\r\n                })\r\n            }\r\n\r\n            let currentPrice = (action.prices[action.prices.length - 1] !== undefined) ? action.prices[action.prices.length - 1].value : null;\r\n            let previousPrice = (action.prices[action.prices.length - 2] !== undefined) ? action.prices[action.prices.length - 2].value : null;\r\n\r\n            if (null !== currentPrice) {\r\n                station[(action.transactionType === TRANSACTION_TYPE_SELL) ? 'currentSellingPrice' : 'currentBuyingPrice'] = currentPrice\r\n            }\r\n\r\n            if (null !== previousPrice) {\r\n                station[(action.transactionType === TRANSACTION_TYPE_SELL) ? 'previousSellingPrice' : 'previousBuyingPrice'] = previousPrice\r\n            }\r\n          \r\n            return {\r\n                loading: false,\r\n                item: newItem,\r\n                error: ''\r\n            };\r\n        case FETCH_ITEM_DETAIL_PRICES_FAILURE:\r\n            return {\r\n                loading: false,\r\n                station: [],\r\n                error: action.payload\r\n            };\r\n        case CLEAR_ITEM_DETAIL:\r\n            return {\r\n                loading: false,\r\n                item: {\r\n                    imgPath: null,\r\n                    stations: [],\r\n                    type: {\r\n                        name: null,\r\n                        subCategory: {\r\n                            name: null,\r\n                            category: {\r\n                                name: null\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n            }\r\n        case SEARCH_ITEM_DETAIL:\r\n            return {\r\n                ...state,\r\n                search: action.payload\r\n            }\r\n        case SELECT_STATION_DETAIL:\r\n            return {\r\n                ...state,\r\n                selectStation: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ItemDetailReducer;","import {combineReducers} from \"redux\";\r\nimport ItemReducer from \"./ItemReducer\";\r\nimport StationReducer from \"./StationReducer\";\r\nimport ItemStationReducer from \"./ItemStationReducer\";\r\nimport ItemDetailReducer from \"./ItemDetailReducer\";\r\n\r\nconst allReducers = combineReducers({\r\n   items: ItemReducer,\r\n   stations: StationReducer,\r\n   itemsStation: ItemStationReducer,\r\n   itemDetail: ItemDetailReducer,\r\n});\r\n\r\nexport default allReducers;","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport allReducers from \"./reducers\";\r\n\r\nconst composeEnhancers =\r\n    process.env.NODE_ENV !== 'production' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n            name: 'MyApp', actionsBlacklist: ['REDUX_STORAGE_SAVE']\r\n        }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n    applyMiddleware(thunk),\r\n);\r\n\r\nconst store = createStore(\r\n    allReducers,\r\n    enhancer\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    offset: theme.mixins.toolbar,\r\n    title: {\r\n        flexGrow: 1,\r\n      },\r\n  }))\r\n\r\nfunction Header() {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <AppBar>\r\n                <Container>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            Star-[Data]-Base\r\n                        </Typography>\r\n                        <Button component={RouterLink} to=\"/StarDataBase/stations\" color=\"inherit\">Stations</Button>\r\n                        <Button component={RouterLink} to=\"/StarDataBase/items\" color=\"inherit\">Items</Button>\r\n                    </Toolbar>\r\n                </Container>  \r\n            </AppBar>\r\n            <div className={classes.offset} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n}));\r\n\r\nfunction EnhancedTableHead({ headCells, order, orderBy, onRequestSort }) {\r\n    const classes = useStyles();\r\n\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n  \r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right' : 'left'}\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nexport default EnhancedTableHead;","import React from 'react';\r\nimport { Breadcrumbs, Typography } from '@material-ui/core';\r\n\r\nfunction ItemBreadcrumbs({ item }) {\r\n    return (\r\n        <Breadcrumbs aria-label=\"breadcrumb\" gutterBottom>\r\n            <Typography variant=\"caption\">{item.type.subCategory.category.name}</Typography>\r\n            <Typography variant=\"caption\">{item.type.subCategory.name}</Typography>\r\n            <Typography variant=\"caption\" color=\"textPrimary\">{item.type.name}</Typography>\r\n        </Breadcrumbs>\r\n    )\r\n}\r\n\r\nexport default ItemBreadcrumbs;","import React from 'react';\r\nimport { \r\n    Typography,\r\n    makeStyles,\r\n    Avatar,\r\n    Box,\r\n}  from '@material-ui/core';\r\nimport ItemBreadcrumbs from '../Breadcrumbs/ItemBreadcrumbs';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    section1: {\r\n        margin: theme.spacing(2),\r\n      },\r\n    avatar: {\r\n        width: theme.spacing(15),\r\n        height: theme.spacing(15),\r\n        margin: theme.spacing(1)\r\n    },\r\n}));\r\n\r\nfunction ItemInfo({item}) {\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <div className={classes.section1}>\r\n            <Box display=\"flex\" justifyContent=\"center\">\r\n                <Avatar src={(null !== item.imgPath)  ? `${process.env.REACT_APP_IMG_URI}${item.imgPath}` : item.imgPath} className={classes.avatar}></Avatar>\r\n            </Box>\r\n            <Typography variant=\"h4\">\r\n                {item.name}\r\n            </Typography>\r\n            <ItemBreadcrumbs item={item}/>\r\n            <Typography gutterBottom color=\"textSecondary\" variant=\"body2\">\r\n                {item.description}\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemInfo;","import React from 'react'\r\nimport { Avatar } from '@material-ui/core'\r\nimport ImageIcon from '@material-ui/icons/Image'\r\n\r\nfunction ItemAvatar({ item, className }) {\r\n    return (\r\n        <Avatar \r\n            src={(null !== item.imgPath)  ? `${process.env.REACT_APP_IMG_URI}${item.imgPath}` : item.imgPath}\r\n            className={className}\r\n        >\r\n            <ImageIcon/>\r\n        </Avatar>\r\n    )\r\n}\r\n\r\nexport default ItemAvatar","import React, { useState } from 'react';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { useDispatch } from 'react-redux';\r\nimport { selectItem } from '../../actions/ItemActions';\r\nimport { Button, makeStyles, Drawer, Box, ButtonGroup } from '@material-ui/core';\r\nimport ItemInfo from './ItemInfo';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport ItemAvatar from '../Avatar/ItemAvatar';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n    drawer: {\r\n      width: 250,\r\n      \"@media (min-width: 500px)\": {\r\n        width: 400,\r\n      }\r\n    },\r\n    button: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\nfunction ItemRow({ item }) {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const [drawer, setDrawer] = useState(false)\r\n    \r\n    const toggleDrawer = (open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n          return;\r\n        }\r\n        dispatch(selectItem(item));\r\n        setDrawer(open);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <TableRow hover>\r\n                <TableCell>\r\n                    <ItemAvatar item={item}/>\r\n                </TableCell>\r\n                <TableCell>{item.name}</TableCell>\r\n                <TableCell>{item.type.subCategory.category.name}</TableCell>\r\n                <TableCell>{item.type.subCategory.name}</TableCell>\r\n                <TableCell>{item.type.name}</TableCell>\r\n                <TableCell align=\"right\">\r\n                    <ButtonGroup size=\"small\" aria-label=\"small outlined button group\" className={classes.button}>\r\n                        <Button variant=\"contained\" color=\"primary\" component={RouterLink} to={`/StarDataBase/item/${item.id}`}>Station Prices</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={toggleDrawer(true)}>Show</Button>\r\n                    </ButtonGroup>\r\n                </TableCell>\r\n            </TableRow>\r\n            <Drawer anchor={\"right\"} open={drawer} onClose={toggleDrawer(false)}>\r\n                <Box\r\n                    className={classes.drawer}\r\n                    role=\"presentation\"\r\n                    onClick={toggleDrawer(false)}\r\n                    onKeyDown={toggleDrawer(false)}\r\n                >\r\n                    <ItemInfo item={item}/>\r\n                </Box>\r\n            </Drawer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemRow;","import React, {useEffect, useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport EnhancedTableHead from '../Table/EnhancedTableHead';\r\nimport ItemRow from './ItemRow';\r\n\r\nfunction ItemTable({ headCells }) {\r\n\r\n    const search = useSelector(state => state.items.search);\r\n    const items = useSelector(state => state.items.items);\r\n    const [filteredItems, setFilteredItems] = useState(items);\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('name');\r\n\r\n    useEffect(() => {\r\n        if (items.length > 0 && search) {\r\n            const lowercasedFilter = search.toLowerCase();\r\n            const itemFilters = items.filter(item => {\r\n                return Object.keys(item).some(key => {\r\n                    if (typeof(item[key]) === \"string\") {\r\n                        return item[key].toLowerCase().includes(lowercasedFilter);\r\n                    } else if (typeof(item[key]) === \"number\") {\r\n                        return item[key] === Number(search);\r\n                    }\r\n                    return false;\r\n                }\r\n                    \r\n                );\r\n            });\r\n\r\n            setFilteredItems(itemFilters);\r\n        } else {\r\n            setFilteredItems(items);   \r\n        } \r\n    }, [items, search])\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n          const order = comparator(a[0], b[0]);\r\n          if (order !== 0) return order;\r\n          return a[1] - b[1];\r\n        });\r\n\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n          return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    return (\r\n        <TableContainer component={Paper} variant=\"outlined\">\r\n            <Table size=\"small\">\r\n                <EnhancedTableHead\r\n                    headCells={headCells}\r\n                    order={order}\r\n                    orderBy={orderBy}\r\n                    onRequestSort={handleRequestSort}\r\n                    rowCount={filteredItems.length}\r\n                />\r\n                <TableBody>\r\n                    {filteredItems ? \r\n                    stableSort(filteredItems, getComparator(order, orderBy))\r\n                    .map(item =>\r\n                        <ItemRow\r\n                            key={item.id}\r\n                            item={item}\r\n                        />\r\n                    ) : null} \r\n                </TableBody>  \r\n            </Table>\r\n        </TableContainer> \r\n    )\r\n}\r\n\r\nexport default ItemTable;","import React from 'react';\r\nimport { TextField, InputAdornment} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nfunction SearchForm({ searchHandler }) {\r\n    return (\r\n        <TextField\r\n            id=\"input-with-icon-textfield\"\r\n            label=\"Search\"\r\n            InputProps={{\r\n                startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                        <SearchIcon />\r\n                    </InputAdornment>\r\n                ),\r\n            }}\r\n            fullWidth\r\n            onChange={searchHandler}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SearchForm;","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Grid } from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Axios from 'axios';\r\n\r\nfunction FilterForm({ applyFilter }) {\r\n    const [categories, setCategories] = useState([]);\r\n    const [subCategories, setSubCategories] = useState([])\r\n    const [types, setTypes] = useState([])\r\n    const [selectedCategories, setSelectedCategories] = useState({category: []})\r\n    const [selectedSubCategories, setSelectedSubCategories] = useState({subCategory: []})\r\n    const [selectedTypes, setSelectedTypes] = useState({type: []})\r\n    const [firstLoad, setFirstLoad] = useState(true)\r\n\r\n    useEffect(() => {\r\n        Axios.get(`${process.env.REACT_APP_API_URI}/api/category`)\r\n            .then(response => {\r\n                setData(response.data)\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            });\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!firstLoad) {\r\n            combineFilter()\r\n        }\r\n        setFirstLoad(false)\r\n    }, [selectedCategories, selectedSubCategories, selectedTypes])\r\n\r\n    const setData = (data) => {\r\n        let categoriesList = [];\r\n        let subCategoriesList = [];\r\n        let typesList = [];\r\n\r\n        data.map(dataCategory => {\r\n            categoriesList = [...categoriesList, { value: dataCategory.name}]\r\n            dataCategory.subCategory.map(dataSubCategory => {\r\n                subCategoriesList = [...subCategoriesList, { value: dataSubCategory.name}]\r\n                dataSubCategory.types.map(dataType => {\r\n                    typesList = [...typesList, { value: dataType.name}]\r\n                    return dataType\r\n                })\r\n                return dataSubCategory\r\n            })\r\n            return dataCategory\r\n        })\r\n\r\n        setCategories(categoriesList);\r\n        setSubCategories(subCategoriesList);\r\n        setTypes(typesList);\r\n    }\r\n\r\n    const handleChangeCategory = (event, newValue) => {\r\n        setSelectedCategories({category: extractValues(newValue)});\r\n    }\r\n\r\n    const handleChangeSubCategory = (event, newValue) => {\r\n        setSelectedSubCategories({subCategory: extractValues(newValue)});\r\n    }\r\n\r\n    const handleChangeType = (event, newValue) => {\r\n        setSelectedTypes({type: extractValues(newValue)});\r\n    }\r\n\r\n    const extractValues = (rawValues) => {\r\n        let values = [];\r\n        rawValues.map(value => {\r\n            values = [...values, value.value]\r\n            return value\r\n        })\r\n        \r\n        return values\r\n    }\r\n\r\n    function combineFilter() {\r\n        applyFilter({...selectedCategories, ...selectedSubCategories, ...selectedTypes})\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid item md={3} xs={12}>\r\n                <Autocomplete\r\n                    id=\"category\"\r\n                    multiple\r\n                    options={categories}\r\n                    getOptionLabel={(option) => option.value}\r\n                    onChange={handleChangeCategory}\r\n                    getOptionSelected={(option, value) => option.value === value.value}\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            variant=\"standard\"\r\n                            label=\"Category\"\r\n                            placeholder=\"Categories\"\r\n                        />\r\n                    )}\r\n                />\r\n            </Grid>\r\n            <Grid item md={3} xs={12}>\r\n                <Autocomplete\r\n                    id=\"sub-category\"\r\n                    multiple\r\n                    options={subCategories}\r\n                    getOptionLabel={(option) => option.value}\r\n                    onChange={handleChangeSubCategory}\r\n                    getOptionSelected={(option, value) => option.value === value.value}\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            variant=\"standard\"\r\n                            label=\"Sub category\"\r\n                            placeholder=\"Sub categories\"\r\n                        />\r\n                    )}\r\n                />\r\n            </Grid>\r\n            <Grid item md={3} xs={12}>\r\n                <Autocomplete\r\n                    id=\"types\"\r\n                    multiple \r\n                    options={types}\r\n                    getOptionLabel={(option) => option.value}\r\n                    onChange={handleChangeType}\r\n                    getOptionSelected={(option, value) => option.value === value.value}\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            variant=\"standard\"\r\n                            label=\"Type\"\r\n                            placeholder=\"Types\"\r\n                        />\r\n                    )}\r\n                />\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FilterForm;","import React, { useEffect } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Grid }  from '@material-ui/core';\r\nimport { fetchItems, searchItem } from '../../actions/ItemActions';\r\nimport ItemTable from './ItemTable';\r\nimport SearchForm from '../Search/SearchForm';\r\nimport FilterForm from '../Filter/FilterForm';\r\n\r\nconst headCells = [\r\n    { id: 'image', numeric: false, disablePadding: false, label: '' },\r\n    { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n    { id: 'category', numeric: false, disablePadding: false, label: 'Category' },\r\n    { id: 'subCategory', numeric: false, disablePadding: false, label: 'Sub Category' },\r\n    { id: 'type', numeric: false, disablePadding: false, label: 'Type' },\r\n    { id: 'action', numeric: false, disablePadding: false, label: '' },\r\n  ];\r\n\r\nfunction ItemPage() {\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        dispatch(fetchItems());\r\n    }, [])\r\n\r\n    const searchHandler = (event) => {\r\n        dispatch(searchItem(event.target.value));\r\n    }\r\n\r\n    function applyFilter(combinedFilters) {\r\n        dispatch(fetchItems(combinedFilters));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={3}>\r\n                <Grid item md={3} xs={12}>\r\n                    <SearchForm searchHandler={searchHandler}/>\r\n                </Grid>\r\n                <FilterForm applyFilter={applyFilter}/>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <ItemTable headCells={headCells}/>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemPage;","import React from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport moment from 'moment';\r\nimport Chart from \"react-apexcharts\";\r\nimport fr from \"apexcharts/dist/locales/fr.json\"\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nfunction ItemStationCharts() {\r\n    const items = useSelector(state => state.itemsStation.station.items)\r\n    const series = useSelector(state => state.itemsStation.seriesChart)\r\n\r\n    const optionsChart = {\r\n        chart: {\r\n            id: 'chart',\r\n            locales: [fr],\r\n            defaultLocale: 'fr',\r\n            animations: {enabled: false},\r\n            zoom: {\r\n                type: \"xy\",\r\n                autoScaleYaxis: true,\r\n            }\r\n        }, \r\n        xaxis: {type: 'datetime'},\r\n        stroke: {curve: 'smooth', width: 2},\r\n        zoom: {enabled: true},\r\n        markers: {size: 0},\r\n        dataLabels: {enabled: false},\r\n    }\r\n\r\n    const optionsBrush = {\r\n        chart: {\r\n            locales: [fr],\r\n            defaultLocale: 'fr',\r\n            selection: {\r\n                enabled: true,\r\n                xaxis: {\r\n                    min: moment().subtract(5, 'days').valueOf(),\r\n                    max: moment().valueOf()\r\n                }\r\n            },\r\n            brush:{\r\n                target: 'chart',\r\n                enabled: true\r\n            },\r\n            animations: {enabled: false}\r\n        }, \r\n        xaxis: {type: 'datetime', tooltip: {enabled: false}},\r\n        yaxis: {tickAmount: 2},\r\n        stroke: {curve: 'smooth'},\r\n        legend: {show: false},\r\n        markers: {size: 0},\r\n        dataLabels: {enabled: false},\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {series.length > 0 ?\r\n                <>\r\n                    <Chart\r\n                        options={optionsChart}\r\n                        height=\"300\"\r\n                        series={series}\r\n                        type=\"line\"\r\n                        width=\"100%\"\r\n                    />\r\n                    <Chart\r\n                        options={optionsBrush}\r\n                        height=\"100\"\r\n                        series={series}\r\n                        type=\"line\"\r\n                        width=\"100%\"\r\n                    />\r\n                </>\r\n            : \r\n                <>\r\n                    {items.length > 0 ? \r\n                        <Skeleton variant=\"rect\" animation=\"wave\" height={430}/>\r\n                    : null}\r\n                </>  \r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemStationCharts;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport { TrendingDown, TrendingUp, TrendingFlat } from '@material-ui/icons';\r\nimport { red, green } from '@material-ui/core/colors';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    moneyImage: {\r\n        width: 20\r\n    }\r\n}));\r\n\r\nfunction Credit({value, previousValue = null}) {\r\n    const classes = useStyles();\r\n\r\n    const trendingIcon = () => {\r\n        previousValue = (null === previousValue) ? value : previousValue;\r\n\r\n        if (value < previousValue) {\r\n            return <TrendingDown style={{ color: red[500] }}/>;\r\n        } else if (value > previousValue) {\r\n            return <TrendingUp style={{ color: green[500] }}/>\r\n        }\r\n\r\n        return <TrendingFlat/>       \r\n    }\r\n\r\n    return ( \r\n        <Box className={classes.moneyFont} display=\"flex\" alignItems=\"center\" justifyContent=\"flex-end\">\r\n            {value !== undefined ?\r\n                <>\r\n                <Typography variant=\"h6\">\r\n                    {value}\r\n                </Typography>\r\n                    <img className={classes.moneyImage} src={`${process.env.PUBLIC_URL}/img/money.png`} alt=\"Credit\"/>{trendingIcon()}\r\n                </>\r\n            : <Typography variant=\"h6\">N/A</Typography>}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Credit;","import React from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport fr from \"apexcharts/dist/locales/fr.json\"\r\n\r\nfunction ItemChart({dataPrice = []}) {\r\n\r\n    const optionsChart = {\r\n        chart: {\r\n            toolbar: {show: false},\r\n            zoom: {enabled: false},\r\n            animations: {enabled: false},\r\n            locales: [fr],\r\n            defaultLocale: 'fr'\r\n        },\r\n        grid: {\r\n            padding: {\r\n              right: 30,\r\n              left: 20\r\n            }\r\n        },\r\n        xaxis: {type: 'datetime', labels: {show: false}},\r\n        yaxis: {labels: {show: false}},\r\n        stroke: {width: 5},\r\n        markers: {size: 0},\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {dataPrice.data.length > 1 ?\r\n                <Chart\r\n                    options={optionsChart}\r\n                    height=\"200\"\r\n                    series={[dataPrice]}\r\n                    type=\"area\"\r\n                    width=\"100%\"\r\n                />\r\n            : null}  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemChart;","import React from 'react';\r\nimport { \r\n    Typography,\r\n    makeStyles,\r\n    Box,\r\n    Divider,\r\n}  from '@material-ui/core';\r\nimport ItemBreadcrumbs from '../Breadcrumbs/ItemBreadcrumbs';\r\nimport Credit from '../Credit/Credit';\r\nimport ItemChart from './ItemChart';\r\nimport ItemAvatar from '../Avatar/ItemAvatar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    section1: {\r\n      margin: theme.spacing(2),\r\n    },\r\n    avatar: {\r\n        width: theme.spacing(15),\r\n        height: theme.spacing(15),\r\n        margin: theme.spacing(1)\r\n    },\r\n}));\r\n\r\nfunction ItemInfo({item}) {\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <>\r\n            <div className={classes.section1}>\r\n                <Box display=\"flex\" justifyContent=\"center\">\r\n                    <ItemAvatar item={item} className={classes.avatar}/>\r\n                </Box>\r\n                <Typography variant=\"h4\">\r\n                    {item.name}\r\n                </Typography>\r\n                <ItemBreadcrumbs item={item}/>\r\n                <Typography gutterBottom color=\"textSecondary\" variant=\"body2\">\r\n                    {item.description}\r\n                </Typography>\r\n            </div>\r\n            <Divider variant=\"middle\"/>\r\n            <div className={classes.section1}>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                    <Typography variant=\"h5\">Selling price</Typography>\r\n                    <Credit value={item.currentSellingPrice} previousValue={item.previousSellingPrice}/>\r\n                </Box>  \r\n                {item.sellDataPrice !== undefined ?\r\n                    <ItemChart dataPrice={item.sellDataPrice}/>\r\n                : null}\r\n            </div>\r\n            <Divider variant=\"middle\"/>\r\n            <div className={classes.section1}>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                    <Typography variant=\"h5\">Buying price</Typography>\r\n                    <Credit value={item.currentBuyingPrice} previousValue={item.previousBuyingPrice}/>\r\n                </Box>\r\n                {item.buyDataPrice !== undefined ?\r\n                    <ItemChart dataPrice={item.buyDataPrice}/>\r\n                : null}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemInfo;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Credit from '../Credit/Credit';\r\nimport { LineChart, Line, YAxis } from 'recharts';\r\nimport { selectItemStation } from '../../actions/ItemStationActions';\r\nimport { Button, makeStyles, Drawer, Box, Link } from '@material-ui/core';\r\nimport ItemInfo from './ItemInfo';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport ItemAvatar from '../Avatar/ItemAvatar';\r\n\r\nconst useStyles = makeStyles({\r\n    drawer: {\r\n      width: 250,\r\n      \"@media (min-width: 500px)\": {\r\n        width: 400,\r\n      }\r\n    }\r\n});\r\n\r\nfunction ItemStationRow({ itemId }) {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch();\r\n    const item = useSelector(state => state.itemsStation.station.items.find(item => item.id === itemId));\r\n    const [drawer, setDrawer] = useState(false)\r\n    \r\n    const toggleDrawer = (open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n          return;\r\n        }\r\n        dispatch(selectItemStation(item));\r\n        setDrawer(open);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {undefined !== item ?\r\n                <>\r\n                    <TableRow hover>\r\n                        <TableCell>\r\n                            <ItemAvatar item={item}/>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            <Link component={RouterLink} to={`/StarDataBase/item/${item.id}`} color=\"inherit\">{item.name}</Link>      \r\n                        </TableCell>\r\n                        <TableCell>{item.type.subCategory.name}</TableCell>\r\n                        <TableCell>{item.type.name}</TableCell>\r\n                        <TableCell>\r\n                            {item.sellPrices !== undefined && item.sellPrices.length > 1 ?\r\n                                <LineChart width={100} height={30} data={item.sellPrices}>\r\n                                    <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" strokeWidth={2} dot={false} isAnimationActive={false} />\r\n                                    <YAxis type=\"number\" hide={true} domain={['auto', 'auto']} />\r\n                                </LineChart>\r\n                            : null}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                            <Credit value={item.currentSellingPrice} previousValue={item.previousSellingPrice}/>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            {item.buyPrices !== undefined && item.buyPrices.length > 1 ?\r\n                                <LineChart width={100} height={30} data={item.buyPrices}>\r\n                                    <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" strokeWidth={2} dot={false} isAnimationActive={false} />\r\n                                    <YAxis type=\"number\" hide={true} domain={['auto', 'auto']} />\r\n                                </LineChart>\r\n                            : null}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                            <Credit value={item.currentBuyingPrice} previousValue={item.previousBuyingPrice}/>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                            <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={toggleDrawer(true)}>Show</Button>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                    <Drawer anchor={\"right\"} open={drawer} onClose={toggleDrawer(false)}>\r\n                        <Box\r\n                            className={classes.drawer}\r\n                            role=\"presentation\"\r\n                            onClick={toggleDrawer(false)}\r\n                            onKeyDown={toggleDrawer(false)}\r\n                        >\r\n                            <ItemInfo item={item}/>\r\n                        </Box>\r\n                    </Drawer>\r\n                </>\r\n            : null }  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemStationRow;","import React, {useEffect, useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport EnhancedTableHead from '../Table/EnhancedTableHead';\r\nimport ItemStationRow from './ItemStationRow';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction ItemStationTable({ headCells }) {\r\n\r\n    const search = useSelector(state => state.itemsStation.search);\r\n    const items = useSelector(state => state.itemsStation.station.items);\r\n    const [filteredItems, setFilteredItems] = useState([]);\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('name');\r\n\r\n    useEffect(() => {\r\n        if (undefined !== items && items.length > 0 && search) {\r\n            const lowercasedFilter = search.toLowerCase();\r\n            const itemFilters = items.filter(item => {\r\n                return Object.keys(item).some(key => {\r\n                        if (typeof(item[key]) === \"string\") {\r\n                            return item[key].toLowerCase().includes(lowercasedFilter);\r\n                        } else if (typeof(item[key]) === \"number\") {\r\n                            return item[key] === Number(search);\r\n                        }\r\n                        return false;\r\n                    }\r\n                );\r\n            });\r\n\r\n            setFilteredItems(itemFilters);\r\n        } else {\r\n            setFilteredItems(items);   \r\n        } \r\n    }, [items, search])\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n          const order = comparator(a[0], b[0]);\r\n          if (order !== 0) return order;\r\n          return a[1] - b[1];\r\n        });\r\n\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n          return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {undefined !== filteredItems && filteredItems.length > 0 ? \r\n                <TableContainer component={Paper} variant=\"outlined\">\r\n                    <Table size=\"small\">\r\n                        <EnhancedTableHead\r\n                            headCells={headCells}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={filteredItems.length}\r\n                        />\r\n                        <TableBody>\r\n                            {filteredItems ? \r\n                            stableSort(filteredItems, getComparator(order, orderBy))\r\n                            .map(item =>\r\n                                <ItemStationRow\r\n                                    key={item.id}\r\n                                    itemId={item.id}\r\n                                />\r\n                            ) : null} \r\n                        </TableBody>  \r\n                    </Table>\r\n                </TableContainer> \r\n            : <Typography variant=\"h5\">No items</Typography> }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemStationTable;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Button } from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\nfunction BackButton() {\r\n    const history = useHistory();\r\n    return (\r\n        <Button color=\"inherit\" onClick={() => history.goBack()}><ArrowBackIosIcon/>Back</Button>\r\n    )\r\n}\r\n\r\nexport default BackButton;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Grid, Typography }  from '@material-ui/core';\r\nimport ItemStationCharts from './ItemStationCharts';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchItemsByStation, clearItemsStation, searchItemStation } from '../../actions/ItemStationActions';\r\nimport ItemStationTable from './ItemStationTable';\r\nimport SearchForm from '../Search/SearchForm';\r\nimport BackButton from '../Button/BackButton';\r\nimport FilterForm from '../Filter/FilterForm';\r\n\r\nconst headCells = [\r\n    { id: 'image', numeric: false, disablePadding: false, label: '' },\r\n    { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n    { id: 'subCategory', numeric: false, disablePadding: false, label: 'Sub Category' },\r\n    { id: 'type', numeric: false, disablePadding: false, label: 'Type' },\r\n    { id: 'sellpriceevo', numeric: false, disablePadding: false, label: 'Sell Price Evo.' },\r\n    { id: 'currentSellingPrice', numeric: true, disablePadding: false, label: 'Sell Price' },\r\n    { id: 'buypriceevo', numeric: false, disablePadding: false, label: 'Buy Price Evo.' },\r\n    { id: 'currentBuyingPrice', numeric: true, disablePadding: false, label: 'Buy Price' },\r\n    { id: 'action', numeric: false, disablePadding: false, label: '' },\r\n  ];\r\n\r\nfunction ItemStationPage() {\r\n    let { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const station = useSelector(state => state.itemsStation.station);\r\n    \r\n    useEffect(() => {\r\n        dispatch(fetchItemsByStation(id));\r\n        return () => {\r\n            dispatch(clearItemsStation());\r\n        }\r\n    }, [id])\r\n\r\n    const searchHandler = (event) => {\r\n        dispatch(searchItemStation(event.target.value));\r\n    }\r\n\r\n    function applyFilter(combinedFilters) {\r\n        dispatch(fetchItemsByStation(id, combinedFilters));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <BackButton/>\r\n            <Typography variant=\"h3\">\r\n                {station.name}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <ItemStationCharts/>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={3}>\r\n                <Grid item md={3} xs={12}>\r\n                    <SearchForm searchHandler={searchHandler}/>\r\n                </Grid>\r\n                <FilterForm applyFilter={applyFilter}/>\r\n            </Grid>\r\n                    \r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <ItemStationTable headCells={headCells}/>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemStationPage;","import React from 'react';\r\nimport { Grid }  from '@material-ui/core';\r\nimport SearchForm from '../Search/SearchForm';\r\nimport { searchStation } from '../../actions/stationActions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nfunction StationPanel() {\r\n    const dispatch = useDispatch();\r\n\r\n    const searchHandler = (event) => {\r\n        dispatch(searchStation(event.target.value));\r\n    }\r\n\r\n    return (\r\n        <Grid item>\r\n            <SearchForm searchHandler={searchHandler}/>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default StationPanel;","import React from 'react';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nfunction StationRow({ id, name }) {    \r\n    return (\r\n        <TableRow hover>\r\n            <TableCell>\r\n                <Typography>\r\n                    {name}\r\n                </Typography>\r\n            </TableCell>\r\n            <TableCell align=\"right\">\r\n                <Button \r\n                    variant=\"contained\" \r\n                    component={RouterLink} \r\n                    to={`/StarDataBase/station/${id}/items`} \r\n                    color=\"primary\"\r\n                >\r\n                    Show items prices\r\n                </Button>\r\n            </TableCell>\r\n        </TableRow>\r\n    )\r\n}\r\n\r\nexport default StationRow;","import React, {useEffect, useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport EnhancedTableHead from '../Table/EnhancedTableHead';\r\nimport StationRow from './StationRow';\r\n\r\nfunction StationTable({ stations, headCells }) {\r\n\r\n    const search = useSelector(state => state.stations.search);\r\n    const [filteredStations, setFilteredStations] = useState(stations);\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('name');\r\n\r\n    useEffect(() => {\r\n        if (stations.length > 0 && search) {\r\n            const lowercasedFilter = search.toLowerCase();\r\n            const stationFilters = stations.filter(station => {\r\n                return Object.keys(station).some(key => {\r\n                    if (typeof(station[key]) === \"string\") {\r\n                        return station[key].toLowerCase().includes(lowercasedFilter);\r\n                    } else if (typeof(station[key]) === \"number\") {\r\n                        return station[key] === Number(search);\r\n                    }\r\n                    return false;\r\n                }\r\n                    \r\n                );\r\n            });\r\n            setFilteredStations(stationFilters);\r\n        } else {\r\n            setFilteredStations(stations);   \r\n        }\r\n    }, [stations, search])\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n          const order = comparator(a[0], b[0]);\r\n          if (order !== 0) return order;\r\n          return a[1] - b[1];\r\n        });\r\n\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n          return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    return (\r\n        <TableContainer component={Paper} variant=\"outlined\">\r\n            <Table>\r\n                <EnhancedTableHead\r\n                    headCells={headCells}\r\n                    order={order}\r\n                    orderBy={orderBy}\r\n                    onRequestSort={handleRequestSort}\r\n                    rowCount={filteredStations.length}\r\n                />\r\n                <TableBody>\r\n                    {filteredStations ? \r\n                    stableSort(filteredStations, getComparator(order, orderBy))\r\n                    .map(station =>\r\n                        <StationRow \r\n                            key={station.id}\r\n                            id={station.id}\r\n                            name={station.name}\r\n                        />\r\n                    ) : null} \r\n                </TableBody>  \r\n            </Table>\r\n        </TableContainer> \r\n    )\r\n}\r\n\r\nexport default StationTable;","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Grid }  from '@material-ui/core';\r\nimport { fetchStations } from '../../actions/stationActions';\r\nimport StationPanel from './StationPanel';\r\nimport StationTable from './StationTable';\r\n\r\nconst headCells = [\r\n    { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n    { id: 'action', numeric: false, disablePadding: false, label: '' },\r\n  ];\r\n\r\nfunction StationPage() {\r\n    const dispatch = useDispatch();\r\n    const stations = useSelector(state => state.stations.stations);\r\n    \r\n    useEffect(() => {\r\n        dispatch(fetchStations());\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={3}>\r\n                <Grid item md={8} xs={12}>\r\n                    <StationTable stations={stations} headCells={headCells}/>\r\n                </Grid>\r\n                <Grid container direction={'column'} spacing={3} item md={4} xs={12}>\r\n                    <StationPanel/>\r\n                </Grid>   \r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StationPage;","import React from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport fr from \"apexcharts/dist/locales/fr.json\"\r\n\r\nfunction ItemChart({dataPrice = []}) {\r\n\r\n    const optionsChart = {\r\n        chart: {\r\n            toolbar: {show: false},\r\n            zoom: {enabled: false},\r\n            animations: {enabled: false},\r\n            locales: [fr],\r\n            defaultLocale: 'fr'\r\n        },\r\n        grid: {\r\n            padding: {\r\n              right: 30,\r\n              left: 20\r\n            }\r\n        },\r\n        xaxis: {type: 'datetime', labels: {show: false}},\r\n        yaxis: {labels: {show: false}},\r\n        stroke: {width: 5},\r\n        markers: {size: 0},\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {dataPrice.data.length > 1 ?\r\n                <Chart\r\n                    options={optionsChart}\r\n                    height=\"200\"\r\n                    series={[dataPrice]}\r\n                    type=\"area\"\r\n                    width=\"100%\"\r\n                />\r\n            : null}  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemChart;","import React from 'react';\r\nimport { \r\n    Typography,\r\n    makeStyles,\r\n    Box,\r\n    Divider,\r\n}  from '@material-ui/core';\r\nimport Credit from '../Credit/Credit';\r\nimport ItemChart from './ItemChart';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    section1: {\r\n      margin: theme.spacing(2),\r\n    },\r\n    avatar: {\r\n        width: theme.spacing(15),\r\n        height: theme.spacing(15),\r\n        margin: theme.spacing(1)\r\n    },\r\n}));\r\n\r\nfunction StationInfo({station}) {\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <>\r\n            <div className={classes.section1}>\r\n                <Typography variant=\"h4\">\r\n                    {station.name}\r\n                </Typography>\r\n            </div>\r\n            <Divider variant=\"middle\"/>\r\n            <div className={classes.section1}>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                    <Typography variant=\"h5\">Selling price</Typography>\r\n                    <Credit value={station.currentSellingPrice} previousValue={station.previousSellingPrice}/>\r\n                </Box>  \r\n                {station.sellDataPrice !== undefined ?\r\n                    <ItemChart dataPrice={station.sellDataPrice}/>\r\n                : null}\r\n            </div>\r\n            <Divider variant=\"middle\"/>\r\n            <div className={classes.section1}>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                    <Typography variant=\"h5\">Buying price</Typography>\r\n                    <Credit value={station.currentBuyingPrice} previousValue={station.previousBuyingPrice}/>\r\n                </Box>\r\n                {station.buyDataPrice !== undefined ?\r\n                    <ItemChart dataPrice={station.buyDataPrice}/>\r\n                : null}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StationInfo;","import React, { useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Credit from '../Credit/Credit';\r\nimport { LineChart, Line, YAxis } from 'recharts';\r\nimport { selectStationDetail } from '../../actions/ItemDetailActions';\r\nimport { Button, makeStyles, Drawer, Box, Link, ButtonGroup } from '@material-ui/core';\r\nimport StationInfo from './StationInfo';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n      width: 250,\r\n      \"@media (min-width: 500px)\": {\r\n        width: 400,\r\n      }\r\n    },\r\n    button: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\nfunction ItemDetailRow({ station }) {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch();\r\n    const [drawer, setDrawer] = useState(false)\r\n\r\n    const toggleDrawer = (open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n          return;\r\n        }\r\n        dispatch(selectStationDetail(station));\r\n        setDrawer(open);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <TableRow hover>\r\n                <TableCell>\r\n                    <Link component={RouterLink} to={`/StarDataBase/station/${station.id}/items`} color=\"inherit\">{station.name}</Link>\r\n                </TableCell>\r\n                <TableCell>\r\n                    {station.sellPrices !== undefined && station.sellPrices.length > 1 ?\r\n                        <LineChart width={100} height={30} data={station.sellPrices}>\r\n                            <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" strokeWidth={2} dot={false} isAnimationActive={false} />\r\n                            <YAxis type=\"number\" hide={true} domain={['auto', 'auto']} />\r\n                        </LineChart>\r\n                    : null}\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                    <Credit value={station.currentSellingPrice} previousValue={station.previousSellingPrice}/>\r\n                </TableCell>\r\n                <TableCell>\r\n                    {station.buyPrices !== undefined && station.buyPrices.length > 1 ?\r\n                        <LineChart width={100} height={30} data={station.buyPrices}>\r\n                            <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" strokeWidth={2} dot={false} isAnimationActive={false} />\r\n                            <YAxis type=\"number\" hide={true} domain={['auto', 'auto']} />\r\n                        </LineChart>\r\n                    : null}\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                    <Credit value={station.currentBuyingPrice} previousValue={station.previousBuyingPrice}/>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                <ButtonGroup size=\"small\" aria-label=\"small outlined button group\" className={classes.button}>\r\n                    <Button variant=\"contained\" color=\"primary\" component={RouterLink} to={`/StarDataBase/station/${station.id}/items`}>Go to station</Button>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={toggleDrawer(true)}>Show</Button>\r\n                </ButtonGroup>\r\n                </TableCell>\r\n            </TableRow>\r\n            <Drawer anchor={\"right\"} open={drawer} onClose={toggleDrawer(false)}>\r\n                <Box\r\n                    className={classes.drawer}\r\n                    role=\"presentation\"\r\n                    onClick={toggleDrawer(false)}\r\n                    onKeyDown={toggleDrawer(false)}\r\n                >\r\n                    <StationInfo station={station}/>\r\n                </Box>\r\n            </Drawer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemDetailRow;","import React, {useEffect, useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport EnhancedTableHead from '../Table/EnhancedTableHead';\r\nimport { Typography } from '@material-ui/core';\r\nimport ItemDetailRow from './ItemDetailRow';\r\n\r\n\r\nfunction ItemDetailTable({ headCells }) {\r\n\r\n    const search = useSelector(state => state.itemDetail.search);\r\n    const item = useSelector(state => state.itemDetail.item);\r\n    const stations = useSelector(state => state.itemDetail.item.stations);\r\n    const [filteredStations, setFilteredStations] = useState([]);\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('name');\r\n\r\n    useEffect(() => {\r\n        if (stations.length > 0 && search) {\r\n            const lowercasedFilter = search.toLowerCase();\r\n            const stationFilters = stations.filter(item => {\r\n                return Object.keys(item).some(key => {\r\n                        if (typeof(item[key]) === \"string\") {\r\n                            return item[key].toLowerCase().includes(lowercasedFilter);\r\n                        } else if (typeof(item[key]) === \"number\") {\r\n                            return item[key] === Number(search);\r\n                        }\r\n                        return false;\r\n                    }\r\n                );\r\n            });\r\n\r\n            setFilteredStations(stationFilters);\r\n        } else {\r\n            setFilteredStations(stations);   \r\n        } \r\n    }, [stations, search])\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n          const order = comparator(a[0], b[0]);\r\n          if (order !== 0) return order;\r\n          return a[1] - b[1];\r\n        });\r\n\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n          return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {undefined !== filteredStations && filteredStations.length > 0 ? \r\n                <TableContainer component={Paper} variant=\"outlined\">\r\n                    <Table size=\"small\">\r\n                        <EnhancedTableHead\r\n                            headCells={headCells}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={filteredStations.length}\r\n                        />\r\n                        <TableBody>\r\n                            {filteredStations ? \r\n                            stableSort(filteredStations, getComparator(order, orderBy))\r\n                            .map(station =>\r\n                                <ItemDetailRow\r\n                                    key={station.id}\r\n                                    item={item}\r\n                                    station={station}\r\n                                />\r\n                            ) : null} \r\n                        </TableBody>  \r\n                    </Table>\r\n                </TableContainer> \r\n            : <Typography variant=\"h5\">No stations</Typography> }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemDetailTable;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Grid, Typography, makeStyles, Avatar, Box }  from '@material-ui/core';\r\nimport { useParams } from 'react-router-dom';\r\nimport SearchForm from '../Search/SearchForm';\r\nimport { clearItemDetail, fetchItemDetail, searchItemDetail } from '../../actions/ItemDetailActions';\r\nimport ItemDetailTable from './ItemDetailTable';\r\nimport ItemBreadcrumbs from '../Breadcrumbs/ItemBreadcrumbs';\r\nimport BackButton from '../Button/BackButton';\r\nimport ItemAvatar from '../Avatar/ItemAvatar';\r\n\r\n\r\nconst headCells = [\r\n    { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n    { id: 'sellpriceevo', numeric: false, disablePadding: false, label: 'Sell Price Evo.' },\r\n    { id: 'currentSellingPrice', numeric: true, disablePadding: false, label: 'Sell Price' },\r\n    { id: 'buypriceevo', numeric: false, disablePadding: false, label: 'Buy Price Evo.' },\r\n    { id: 'currentBuyingPrice', numeric: true, disablePadding: false, label: 'Buy Price' },\r\n    { id: 'action', numeric: false, disablePadding: false, label: '' },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    section1: {\r\n        margin: theme.spacing(0,0,4,0),\r\n    },\r\n    avatar: {\r\n        width: theme.spacing(10),\r\n        height: theme.spacing(10),\r\n    },\r\n}));\r\n\r\nfunction ItemDetailPage() {\r\n    let { id } = useParams();\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const item = useSelector(state => state.itemDetail.item);\r\n    \r\n    useEffect(() => {\r\n        dispatch(fetchItemDetail(id));\r\n        return () => {\r\n            dispatch(clearItemDetail());\r\n        }\r\n    }, [id])\r\n\r\n    const searchHandler = (event) => {\r\n        dispatch(searchItemDetail(event.target.value));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <BackButton/>\r\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                <Typography variant=\"h3\">{item.name}</Typography>\r\n                <ItemAvatar item={item} className={classes.avatar}/>\r\n            </Box>\r\n            <ItemBreadcrumbs item={item}/>\r\n            <Typography variant=\"body1\" className={classes.section1}>\r\n                {item.description}\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item>\r\n                    <SearchForm searchHandler={searchHandler}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <ItemDetailTable headCells={headCells}/>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemDetailPage;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Header from './components/Header/Header';\r\nimport ItemPage from './components/Item/ItemPage';\r\nimport ItemStationPage from './components/ItemStation/ItemStationPage';\r\nimport StationPage from './components/Station/StationPage';\r\nimport ItemDetailPage from './components/ItemDetail/ItemDetailPage';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        marginTop: 16\r\n    }\r\n}));\r\n\r\nfunction App() {\r\n    const classes = useStyles();\r\n\r\n    return (            \r\n        <Router>\r\n            <Header/>\r\n            <Container className={classes.margin}>\r\n                <Switch>\r\n                    <Route path=\"/StarDataBase/item/:id\" component={ItemDetailPage} />\r\n                    <Route path=\"/StarDataBase/station/:id/items\" component={ItemStationPage} />\r\n                    <Route path=\"/StarDataBase/stations\" component={StationPage} />\r\n                    <Route path=\"/StarDataBase/items\" component={ItemPage} />    \r\n                    <Route path=\"/StarDataBase/\" component={StationPage} />    \r\n                </Switch>\r\n            </Container>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './configureStore';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n      <App/>\n  </Provider>\n  , document.getElementById('root'));\n"],"sourceRoot":""}