{"version":3,"sources":["reducers/ItemReducer.jsx","actions/ItemTypes.jsx","reducers/index.jsx","configureStore.jsx","components/Header/Header.jsx","actions/ItemActions.jsx","components/Credit/Credit.jsx","components/Item/ItemRow.jsx","components/Item/ItemTable.jsx","components/Search/SearchForm.jsx","components/Item/ItemChart.jsx","components/Item/ItemInfo.jsx","components/Item/ItemPanel.jsx","components/Item/ItemsChart.jsx","components/Item/ItemPage.jsx","App.jsx","index.js"],"names":["ItemReducer","state","items","loading","action","type","payload","error","search","selectItem","allReducers","combineReducers","enhancer","composeEnhancers","compose","applyMiddleware","thunk","store","createStore","useStyles","makeStyles","theme","offset","mixins","toolbar","title","flexGrow","Header","classes","AppBar","Container","Toolbar","Typography","variant","className","Button","color","fetchItemsRequest","moneyFont","fontSize","moneyImage","width","Credit","value","previousValue","Box","display","alignItems","justifyContent","src","alt","TrendingDown","style","red","TrendingUp","green","TrendingFlat","ItemRow","id","name","rank","image","currentPrice","previousPrice","dataChartPrice","dispatch","updatedAt","useDispatch","TableRow","onMouseOver","hover","TableCell","Avatar","data","length","height","colors","curve","lineWidth","enableGridX","enableGridY","axisBottom","axisLeft","enablePoints","yScale","min","max","stacked","reverse","margin","top","right","bottom","left","align","headCells","numeric","disablePadding","label","visuallyHidden","border","clip","overflow","padding","position","ItemTable","useSelector","useState","filteredItems","setFilteredItems","order","setOrder","orderBy","setOrderBy","descendingComparator","a","b","EnhancedTableHead","props","onRequestSort","TableHead","map","headCell","key","sortDirection","TableSortLabel","active","direction","onClick","property","event","useEffect","lowercasedFilter","toLowerCase","itemFilters","filter","item","Object","keys","some","includes","Number","TableContainer","component","Paper","Table","stickyHeader","rowCount","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","SearchForm","TextField","InputProps","startAdornment","InputAdornment","fullWidth","onChange","target","ItemChart","Grid","useMesh","enableSlices","enableArea","ItemInfo","description","Card","CardContent","gutterBottom","ItemPanel","ItemsChart","setData","newItems","require","clone","combinedDataChartPrices","x","Date","y","xScale","precision","format","pointSize","legends","anchor","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","itemBackground","ItemPage","selectItemId","setSelectItem","find","container","spacing","xs","md","marginTop","App","prices","price","date","getTime","undefined","fetchItemsSuccess","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.160e4d91.chunk.js","sourcesContent":["import {\r\n    FETCH_ITEMS_FAILURE,\r\n    FETCH_ITEMS_REQUEST,\r\n    FETCH_ITEMS_SUCCESS,\r\n    SEARCH_ITEM,\r\n    SELECT_ITEM\r\n} from \"../actions/ItemTypes\";\r\n\r\nconst ItemReducer = (state = {items: [], loading: false}, action) => {\r\n    switch (action.type) {\r\n        case FETCH_ITEMS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case FETCH_ITEMS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                items: action.payload,\r\n                error: ''\r\n            };\r\n        case FETCH_ITEMS_FAILURE:\r\n            return {\r\n                loading: false,\r\n                items: [],\r\n                error: action.payload\r\n            };\r\n        case SEARCH_ITEM:\r\n            return {\r\n                ...state,\r\n                search: action.payload\r\n            }\r\n        case SELECT_ITEM:\r\n            return {\r\n                ...state,\r\n                selectItem: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ItemReducer;","export const FETCH_ITEMS_REQUEST = 'FETCH_ITEMS_REQUEST';\r\nexport const FETCH_ITEMS_SUCCESS = 'FETCH_ITEMS_SUCCESS';\r\nexport const FETCH_ITEMS_FAILURE = 'FETCH_ITEMS_FAILURE';\r\nexport const SEARCH_ITEM = 'SEARCH_ITEM';\r\nexport const SELECT_ITEM = 'SELECT_ITEM';","import ItemReducer from \"./ItemReducer\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst allReducers = combineReducers({\r\n   items: ItemReducer\r\n});\r\n\r\nexport default allReducers;","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport allReducers from \"./reducers\";\r\n\r\nconst composeEnhancers =\r\n    process.env.NODE_ENV !== 'production' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n            name: 'MyApp', actionsBlacklist: ['REDUX_STORAGE_SAVE']\r\n        }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n    applyMiddleware(thunk),\r\n);\r\n\r\nconst store = createStore(\r\n    allReducers,\r\n    enhancer\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    offset: theme.mixins.toolbar,\r\n    title: {\r\n        flexGrow: 1,\r\n      },\r\n  }))\r\n\r\nfunction Header() {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <AppBar>\r\n                <Container>\r\n                    <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Starbase\r\n                    </Typography>\r\n                    <Button color=\"inherit\">Login</Button>\r\n                </Toolbar>\r\n                </Container>  \r\n            </AppBar>\r\n            <div className={classes.offset} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import {\r\n    /*FETCH_ITEMS_FAILURE,*/\r\n    FETCH_ITEMS_REQUEST,\r\n    FETCH_ITEMS_SUCCESS,\r\n    SEARCH_ITEM,\r\n    SELECT_ITEM\r\n} from \"./ItemTypes\";\r\n\r\nconst fetchItemsRequest = () => {\r\n    return {\r\n        type: FETCH_ITEMS_REQUEST\r\n    }\r\n};\r\n\r\nconst fetchItemsSuccess = items => {\r\n    return {\r\n        type: FETCH_ITEMS_SUCCESS,\r\n        payload: items\r\n    }\r\n};\r\n\r\nexport const searchItem = search => {\r\n    return  {\r\n        type: SEARCH_ITEM,\r\n        payload: search\r\n    }\r\n};\r\n\r\nexport const selectItem = selectId => {\r\n    return {\r\n        type: SELECT_ITEM,\r\n        payload: selectId\r\n    }\r\n}\r\n\r\n/*const fetchItemsFailure = error => {\r\n    return {\r\n        type: FETCH_ITEMS_FAILURE,\r\n        payload: error\r\n    }\r\n};*/\r\n\r\n\r\nexport const fetchItems = () => {\r\n    return (dispatch) => {\r\n        dispatch(fetchItemsRequest);\r\n\r\n        const items = [\r\n            {\r\n                id: '1',\r\n                name: 'Ajatite ore',\r\n                description: 'Potentially holds goodies.',\r\n                image: '/img/ajatite_ore.png',\r\n                rank: 'worthless',\r\n                type: 'ore',\r\n                prices: [],\r\n                updatedAt: '2012-04-28T18:25:43.511Z'\r\n            },\r\n            {\r\n                id: '2',\r\n                name: 'Ajatite',\r\n                description: 'Potentially holds goodies.',\r\n                image: '/img/ajatite.png',\r\n                rank: 'worthless',\r\n                type: 'refined ore',\r\n                prices: [\r\n                    {\r\n                        price: 0.77,\r\n                        date: \"2020-05-15T18:25:43.511Z\"\r\n                    }\r\n                ],\r\n                updatedAt: '2020-05-15'\r\n            },\r\n            {\r\n                id: '3',\r\n                name: 'Bastium',\r\n                description: 'Brown as dirt and just about as common.',\r\n                image: '/img/bastium.png',\r\n                rank: 'low',\r\n                type: 'refined ore',\r\n                prices: [\r\n                    {\r\n                        price: 6,\r\n                        date: \"2020-05-15T18:25:43.511Z\"\r\n                    },\r\n                    {\r\n                        price: 10,\r\n                        date: \"2020-05-17T18:25:43.511Z\"\r\n                    }\r\n                    ,\r\n                    {\r\n                        price: 12,\r\n                        date: \"2020-05-17T20:25:43.511Z\"\r\n                    }\r\n                ],\r\n                updatedAt: '2020-05-16T18:25:43.511Z'\r\n            },\r\n            {\r\n                id: '4',\r\n                name: 'Arkanium',\r\n                description: 'Dark emerald green ore like that of a vipers ichor.',\r\n                image: '/img/arkanium.png',\r\n                rank: 'rare',\r\n                type: 'refined ore',\r\n                prices: [\r\n                    {\r\n                        price: 100,\r\n                        date: \"2020-05-15T18:25:43.511Z\"\r\n                    },\r\n                    {\r\n                        price: 130,\r\n                        date: \"2020-05-16T17:25:43.511Z\"\r\n                    },\r\n                    {\r\n                        price: 160,\r\n                        date: \"2020-05-17T18:25:43.511Z\"\r\n                    }\r\n                ],\r\n                updatedAt: '2020-05-16T18:25:43.511Z'\r\n            }\r\n        ];\r\n\r\n        items.map(item => {\r\n            item.prices.sort((a, b) => {\r\n                a = new Date(a.date).getTime();\r\n                b = new Date(b.date).getTime();\r\n                   return b < a ? 1 : -1;\r\n                });\r\n            let currentPrice = (item.prices[item.prices.length - 1] !== undefined) ? item.prices[item.prices.length - 1].price : 0;\r\n            item['currentPrice'] = currentPrice\r\n            item['previousPrice'] = (item.prices[item.prices.length - 2] !== undefined) ? item.prices[item.prices.length - 2].price : null;\r\n            item['dataChartPrice'] = [{\r\n                \"id\": item.name,\r\n                \"color\": \"#467fcf\",\r\n                \"data\": Object.keys(item.prices).map(function(name){\r\n                    return {\r\n                        x: new Date(item.prices[name]['date']),\r\n                        y: item.prices[name]['price']\r\n                    };\r\n                })   \r\n                \r\n                /*[...Object.keys(item.prices).map(function(name){\r\n                    return {\r\n                        x: new Date(item.prices[name]['date']),\r\n                        y: item.prices[name]['price']\r\n                    };\r\n                }), {x: new Date(), y: currentPrice}]  */\r\n            }]\r\n            \r\n            return item;          \r\n        });\r\n\r\n        dispatch(fetchItemsSuccess(items));\r\n        /*axios.get('/api/items')\r\n            .then(response => {\r\n                const items = response.data['hydra:member'];\r\n                dispatch(fetchItemsSuccess(items));\r\n            })\r\n            .catch(error => {\r\n                const errorMsg = error.message;\r\n                dispatch(fetchItemsFailure(errorMsg));\r\n            })*/\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport { TrendingDown, TrendingUp, TrendingFlat } from '@material-ui/icons';\r\nimport { red, green } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    moneyFont: {\r\n        fontSize: 20\r\n    },\r\n    moneyImage: {\r\n        width: 20\r\n    }\r\n}));\r\n\r\nfunction Credit({value, previousValue = null}) {\r\n    const classes = useStyles();\r\n\r\n    const trendingIcon = () => {\r\n        previousValue = (null === previousValue) ? value : previousValue;\r\n\r\n        if (value < previousValue) {\r\n            return <TrendingDown style={{ color: red[500] }}/>;\r\n        } else if (value > previousValue) {\r\n            return <TrendingUp style={{ color: green[500] }}/>\r\n        }\r\n\r\n        return <TrendingFlat/>       \r\n    }\r\n\r\n    return (\r\n        <Box className={classes.moneyFont} display=\"flex\" alignItems=\"center\" justifyContent=\"flex-end\">\r\n            {value}<img className={classes.moneyImage} src=\"/img/money.png\" alt=\"Credit\"/>{trendingIcon()}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Credit;","import React, { useState, useEffect } from 'react';\r\nimport { selectItem } from '../../actions/ItemActions';\r\nimport { useDispatch } from \"react-redux\";\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Line } from '@nivo/line';\r\nimport Credit from '../Credit/Credit';\r\n\r\nfunction ItemRow({id, name, rank, image, type, currentPrice, previousPrice, dataChartPrice, updatedAt}) {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    function handleOnMouseEnter() {\r\n        dispatch(selectItem(id));\r\n    }\r\n    \r\n    return (\r\n        <TableRow onMouseOver={handleOnMouseEnter} hover>\r\n            <TableCell>\r\n                <Avatar src={image}></Avatar>\r\n            </TableCell>\r\n            <TableCell>{name}</TableCell>\r\n            <TableCell>{type}</TableCell>\r\n            <TableCell>{rank}</TableCell>\r\n            <TableCell>\r\n                {dataChartPrice[0].data.length > 1 ?            \r\n                    <Line\r\n                        data={dataChartPrice}\r\n                        width={100}\r\n                        height={30}\r\n                        colors={\"#ff3333\"}\r\n                        curve=\"cardinal\"\r\n                        lineWidth={1}\r\n                        enableGridX={false}\r\n                        enableGridY={false}\r\n                        axisBottom={null}\r\n                        axisLeft={null}\r\n                        enablePoints={false}\r\n                        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\r\n                        margin={{ top: 2, right: 2, bottom: 2, left: 2 }}\r\n                    />\r\n                : null }\r\n            </TableCell>\r\n            <TableCell align=\"right\"><Credit value={currentPrice} previousValue={previousPrice}/></TableCell>\r\n        </TableRow>\r\n    )\r\n}\r\n\r\nexport default ItemRow;","import React, {useEffect, useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport ItemRow from \"./ItemRow\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst headCells = [\r\n    { id: 'image', numeric: false, disablePadding: false, label: '' },\r\n    { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n    { id: 'type', numeric: false, disablePadding: false, label: 'Type' },\r\n    { id: 'rank', numeric: false, disablePadding: false, label: 'Rank' },\r\n    { id: 'priceevo', numeric: false, disablePadding: false, label: 'Price Evolution' },\r\n    { id: 'currentPrice', numeric: true, disablePadding: false, label: 'Price' },\r\n  ];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n}));\r\n\r\n\r\nfunction ItemTable() {\r\n    const items = useSelector(state => state.items.items);\r\n    const search = useSelector(state => state.items.search);\r\n    const [filteredItems, setFilteredItems] = useState(items);\r\n    const classes = useStyles();\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('calories');\r\n\r\n    useEffect(() => {\r\n        if (items) {\r\n            if (search) {\r\n                const lowercasedFilter = search.toLowerCase();\r\n                const itemFilters = items.filter(item => {\r\n                    return Object.keys(item).some(key => {\r\n                        if (typeof(item[key]) === \"string\") {\r\n                            return item[key].toLowerCase().includes(lowercasedFilter);\r\n                        } else if (typeof(item[key]) === \"number\") {\r\n                            return item[key] === Number(search);\r\n                        }\r\n                        return false;\r\n                    }\r\n                       \r\n                    );\r\n                });\r\n\r\n                setFilteredItems(itemFilters);\r\n            } else {\r\n                setFilteredItems(items);   \r\n            }   \r\n        }   \r\n    }, [items, search])\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n      };\r\n\r\n\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n          const order = comparator(a[0], b[0]);\r\n          if (order !== 0) return order;\r\n          return a[1] - b[1];\r\n        });\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n          return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n\r\n    function EnhancedTableHead(props) {\r\n        const { classes, order, orderBy, onRequestSort } = props;\r\n        const createSortHandler = (property) => (event) => {\r\n            onRequestSort(event, property);\r\n        };\r\n      \r\n        return (\r\n          <TableHead>\r\n            <TableRow>\r\n              {headCells.map((headCell) => (\r\n                <TableCell\r\n                  key={headCell.id}\r\n                  align={headCell.numeric ? 'right' : 'left'}\r\n                  padding={headCell.disablePadding ? 'none' : 'default'}\r\n                  sortDirection={orderBy === headCell.id ? order : false}\r\n                >\r\n                    <TableSortLabel\r\n                        active={orderBy === headCell.id}\r\n                        direction={orderBy === headCell.id ? order : 'asc'}\r\n                        onClick={createSortHandler(headCell.id)}\r\n                    >\r\n                        {headCell.label}\r\n                        {orderBy === headCell.id ? (\r\n                            <span className={classes.visuallyHidden}>\r\n                                {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                            </span>\r\n                        ) : null}\r\n                    </TableSortLabel>\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <TableContainer component={Paper} variant=\"outlined\">\r\n            <Table stickyHeader>\r\n                <EnhancedTableHead\r\n                    classes={classes}\r\n                    order={order}\r\n                    orderBy={orderBy}\r\n                    onRequestSort={handleRequestSort}\r\n                    rowCount={filteredItems.length}\r\n                />\r\n                <TableBody>\r\n                    {filteredItems ? \r\n                    stableSort(filteredItems, getComparator(order, orderBy))\r\n                    .map(item =>\r\n                        <ItemRow \r\n                            key={item.id}\r\n                            id={item.id}\r\n                            name={item.name}\r\n                            type={item.type}\r\n                            rank={item.rank}\r\n                            image={item.image}\r\n                            currentPrice={item.currentPrice}\r\n                            previousPrice={item.previousPrice}\r\n                            dataChartPrice={item.dataChartPrice}\r\n                            updatedAt={item.updatedAt}\r\n                        />\r\n                    ) : null} \r\n                </TableBody>  \r\n            </Table>\r\n        </TableContainer> \r\n    )\r\n}\r\n\r\nexport default ItemTable;","import React from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {searchItem} from \"../../actions/ItemActions\";\r\nimport { TextField, InputAdornment} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nfunction SearchForm() {\r\n    const dispatch = useDispatch();\r\n\r\n    const searchHandler = (event) => {\r\n        dispatch(searchItem(event.target.value));\r\n    }\r\n\r\n    return (\r\n        <TextField\r\n            id=\"input-with-icon-textfield\"\r\n            label=\"Search\"\r\n            InputProps={{\r\n                startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                        <SearchIcon />\r\n                    </InputAdornment>\r\n                ),\r\n            }}\r\n            fullWidth\r\n            onChange={searchHandler}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SearchForm;","import React from 'react';\r\nimport { \r\n    Grid,\r\n    Paper \r\n}  from '@material-ui/core';\r\nimport { ResponsiveLine } from '@nivo/line';\r\n\r\nfunction ItemChart({dataChartPrice}) {\r\n    return (\r\n        <>\r\n            {dataChartPrice[0].data.length > 1 ? \r\n                <Grid item>\r\n                    <Paper variant=\"outlined\" style={{height:150}}>\r\n                        <ResponsiveLine\r\n                            data={dataChartPrice}\r\n                            margin={{ top: 8, right: 5, bottom: 8, left: 50 }}\r\n                            colors={\"#467fcf\"}\r\n                            useMesh={true}\r\n                            lineWidth={3}\r\n                            enableGridX={false}\r\n                            axisBottom={null}\r\n                            enableSlices=\"x\"\r\n                            enableArea={true}\r\n                        />\r\n                    </Paper>\r\n                </Grid>\r\n            : null}  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemChart;","import React from 'react';\r\nimport { \r\n    Grid,\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n}  from '@material-ui/core';\r\n\r\nfunction ItemInfo({name, description}) {\r\n    return (\r\n        <Grid item>\r\n            <Card variant=\"outlined\">\r\n                <CardContent>\r\n                    <Typography variant=\"h4\" gutterBottom>\r\n                        {name}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\">\r\n                        {description}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ItemInfo;","import React from 'react';\r\nimport { Grid }  from '@material-ui/core';\r\nimport SearchForm from '../Search/SearchForm';\r\nimport ItemChart from './ItemChart';\r\nimport ItemInfo from './ItemInfo';\r\n\r\nfunction ItemPanel({item}) {\r\n\r\n    return (\r\n        <>\r\n            <Grid item>\r\n                <SearchForm/>\r\n            </Grid>\r\n            {item ?\r\n                <>\r\n                    <ItemInfo name={item.name} description={item.description}/> \r\n                    <ItemChart dataChartPrice={item.dataChartPrice}/>      \r\n                </>\r\n            : null}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemPanel;","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { \r\n    Grid,\r\n    Paper \r\n}  from '@material-ui/core';\r\nimport { ResponsiveLine } from '@nivo/line';\r\n\r\nfunction ItemsChart() {\r\n    const items = useSelector(state => state.items.items)\r\n    const [data, setData] = useState(items)\r\n\r\n    useEffect(() => {\r\n        if (items) {\r\n            const clone = require('rfdc')()\r\n            const newItems = clone(items)\r\n            let combinedDataChartPrices = []\r\n\r\n            newItems.map(item => {\r\n                item.dataChartPrice[0].data = [...item.dataChartPrice[0].data, {x: new Date(), y: item.currentPrice}]\r\n                combinedDataChartPrices = [...combinedDataChartPrices, ...item.dataChartPrice]\r\n            })\r\n\r\n            setData(combinedDataChartPrices)\r\n        }\r\n    }, [items])\r\n\r\n    return (\r\n        <>\r\n            {data.length > 1 ? \r\n                <Grid item>\r\n                    <Paper variant=\"outlined\" style={{height:300}}>\r\n                        <ResponsiveLine\r\n                            data={data}\r\n                            margin={{ top: 45, right: 5, bottom: 30, left: 50 }}\r\n                            useMesh={true}\r\n                            lineWidth={3}\r\n                            xScale={{\r\n                                type: 'time',\r\n                                precision: 'hour',\r\n                              }}\r\n                            axisBottom= {{\r\n                                format: '%b %d',\r\n                              }}\r\n                            enableSlices=\"x\"\r\n                            pointSize={12}\r\n                            legends={[\r\n                                {\r\n                                    anchor: 'top-left',\r\n                                    direction: 'row',\r\n                                    justify: false,\r\n                                    translateX: 0,\r\n                                    translateY: -32,\r\n                                    itemsSpacing: 0,\r\n                                    itemDirection: 'left-to-right',\r\n                                    itemWidth: 80,\r\n                                    itemHeight: 20,\r\n                                    itemOpacity: 0.75,\r\n                                    symbolSize: 13,\r\n                                    symbolShape: 'circle',\r\n                                    symbolBorderColor: 'rgba(0, 0, 0, .5)',\r\n                                    effects: [\r\n                                        {\r\n                                            on: 'hover',\r\n                                            style: {\r\n                                                itemBackground: 'rgba(0, 0, 0, .03)',\r\n                                                itemOpacity: 1\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            ]}\r\n                        />\r\n                    </Paper>\r\n                </Grid>\r\n            : null}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemsChart;","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { Grid }  from '@material-ui/core';\r\nimport ItemTable from './ItemTable';\r\nimport ItemPanel from './ItemPanel';\r\nimport ItemsChart from './ItemsChart';\r\n\r\nfunction ItemPage() {\r\n    const items = useSelector(state => state.items.items);\r\n    const selectItemId = useSelector(state => state.items.selectItem);\r\n    const [selectItem, setSelectItem] = useState();\r\n    \r\n    useEffect(() => {\r\n        if (items && selectItemId) {\r\n            setSelectItem(items.find(item => item.id === selectItemId))\r\n        }\r\n    }, [items, selectItemId])\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <ItemsChart/>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item md={8} xs={12}>\r\n                    <ItemTable/>\r\n                </Grid>\r\n                <Grid container direction={'column'} spacing={3} item md={4} xs={12}>\r\n                    <ItemPanel item={selectItem}/>\r\n                </Grid>   \r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemPage;","import React, {useEffect} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Header from './components/Header/Header';\r\nimport ItemPage from './components/Item/ItemPage';\r\nimport { fetchItems } from './actions/ItemActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        marginTop: 16\r\n    }\r\n}));\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchItems());\r\n    }, []);\r\n\r\n    return (            \r\n        <Router>\r\n            <Header/>\r\n            <Container className={classes.margin}>\r\n                <Switch>\r\n                    <Route path=\"/\" component={ItemPage} />\r\n                </Switch>\r\n            </Container>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './configureStore';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n      <App/>\n  </Provider>\n  , document.getElementById('root'));\n"],"sourceRoot":""}