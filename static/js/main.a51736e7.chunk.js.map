{"version":3,"sources":["reducers/ItemReducer.jsx","actions/ItemActions.jsx","reducers/StationReducer.jsx","actions/stationActions.jsx","reducers/ItemStationReducer.jsx","actions/ItemStationActions.jsx","reducers/index.jsx","configureStore.jsx","components/Header/Header.jsx","components/Table/EnhancedTableHead.jsx","components/Breadcrumbs/ItemBreadcrumbs.jsx","components/Item/ItemInfo.jsx","components/Item/ItemRow.jsx","components/Item/ItemTable.jsx","components/Search/SearchForm.jsx","components/Item/ItemPage.jsx","components/ItemStation/ItemStationCharts.jsx","components/Credit/Credit.jsx","components/ItemStation/ItemChart.jsx","components/ItemStation/ItemInfo.jsx","components/ItemStation/ItemStationRow.jsx","components/ItemStation/ItemStationTable.jsx","components/ItemStation/ItemStationPage.jsx","components/Station/StationPanel.jsx","components/Station/StationRow.jsx","components/Station/StationTable.jsx","components/Station/StationPage.jsx","App.jsx","index.js"],"names":["ItemReducer","state","items","loading","search","action","type","payload","error","selectItem","StationReducer","stations","ItemStationReducer","station","clone","require","newStation","item","find","id","itemId","prices","map","price","value","parseFloat","name","Object","keys","parseInt","allReducers","combineReducers","itemsStation","enhancer","composeEnhancers","compose","applyMiddleware","thunk","store","createStore","useStyles","makeStyles","theme","offset","mixins","toolbar","title","flexGrow","Header","classes","AppBar","Container","Toolbar","Typography","variant","className","Button","component","RouterLink","to","color","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","width","EnhancedTableHead","headCells","order","orderBy","onRequestSort","TableHead","TableRow","headCell","TableCell","key","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","ItemBreadcrumbs","Breadcrumbs","aria-label","gutterBottom","subCategory","category","section1","spacing","avatar","ItemInfo","Box","display","justifyContent","Avatar","src","imgPath","process","description","drawer","ItemRow","dispatch","useDispatch","useState","setDrawer","toggleDrawer","open","hover","rank","Drawer","anchor","onClose","role","onKeyDown","ItemTable","useSelector","filteredItems","setFilteredItems","setOrder","setOrderBy","descendingComparator","a","b","useEffect","length","lowercasedFilter","toLowerCase","itemFilters","filter","some","includes","Number","TableContainer","Paper","Table","size","rowCount","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","SearchForm","searchHandler","TextField","InputProps","startAdornment","InputAdornment","fullWidth","onChange","ItemPage","Axios","get","then","response","data","catch","fetchItemsFailure","message","Grid","container","target","xs","ItemStationCharts","series","setSeries","newItems","combinedSerie","undefined","dataChartPrice","moment","valueOf","currentSellingPrice","optionsChart","chart","locales","fr","defaultLocale","animations","enabled","zoom","autoScaleYaxis","xaxis","stroke","curve","markers","dataLabels","optionsBrush","selection","min","subtract","max","brush","tooltip","yaxis","tickAmount","legend","show","options","moneyImage","Credit","previousValue","moneyFont","alignItems","alt","TrendingDown","style","red","TrendingUp","green","TrendingFlat","ItemChart","grid","right","left","labels","Divider","previousSellingPrice","currentBuyingPrice","previousBuyingPrice","ItemStationRow","stationId","fetchItemPricesStationSuccess","fetchItemPricesStationFailure","selectItemStation","dataKey","strokeWidth","dot","isAnimationActive","hide","domain","ItemStationTable","ItemStationPage","useParams","fetchItemsStationFailure","StationPanel","StationRow","StationTable","filteredStations","setFilteredStations","stationFilters","StationPage","fetchStationsFailure","md","marginTop","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a51736e7.chunk.js","sourcesContent":["import {\r\n    FETCH_ITEMS_FAILURE,\r\n    FETCH_ITEMS_REQUEST,\r\n    FETCH_ITEMS_SUCCESS,\r\n    SEARCH_ITEM,\r\n    SELECT_ITEM,\r\n} from \"../actions/ItemActions\";\r\n\r\nconst ItemReducer = (state = {items: [], loading: false, search: null}, action) => {\r\n    switch (action.type) {\r\n        case FETCH_ITEMS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case FETCH_ITEMS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                items: action.payload,\r\n                error: ''\r\n            };\r\n        case FETCH_ITEMS_FAILURE:\r\n            return {\r\n                loading: false,\r\n                items: [],\r\n                error: action.payload\r\n            };\r\n        case SEARCH_ITEM:\r\n            return {\r\n                ...state,\r\n                search: action.payload\r\n            }\r\n        case SELECT_ITEM:\r\n            return {\r\n                ...state,\r\n                selectItem: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ItemReducer;","import Axios from \"axios\";\r\n\r\nexport const FETCH_ITEMS_REQUEST = 'FETCH_ITEMS_REQUEST';\r\nexport const FETCH_ITEMS_SUCCESS = 'FETCH_ITEMS_SUCCESS';\r\nexport const FETCH_ITEMS_FAILURE = 'FETCH_ITEMS_FAILURE';\r\nexport const SEARCH_ITEM = 'SEARCH_ITEM';\r\nexport const SELECT_ITEM = 'SELECT_ITEM';\r\n\r\nconst fetchItemsRequest = () => {\r\n    return {\r\n        type: FETCH_ITEMS_REQUEST\r\n    }\r\n};\r\n\r\nconst fetchItemsSuccess = items => {\r\n    return {\r\n        type: FETCH_ITEMS_SUCCESS,\r\n        payload: items\r\n    }\r\n};\r\n\r\nconst fetchItemsFailure = error => {\r\n    return {\r\n        type: FETCH_ITEMS_FAILURE,\r\n        payload: error\r\n    }\r\n};\r\n\r\nexport const searchItem = search => {\r\n    return  {\r\n        type: SEARCH_ITEM,\r\n        payload: search\r\n    }\r\n};\r\n\r\nexport const selectItem = item => {\r\n    return {\r\n        type: SELECT_ITEM,\r\n        payload: item\r\n    }\r\n}\r\n\r\nexport const fetchItems = () => {\r\n    return (dispatch) => {\r\n        dispatch(fetchItemsRequest());\r\n        Axios.get(`${process.env.REACT_APP_API_URI}/api/item`)\r\n            .then(response => {\r\n                dispatch(fetchItemsSuccess(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchItemsFailure(error.message));\r\n            })\r\n    }\r\n};\r\n","import {\r\n    FETCH_STATIONS_REQUEST,\r\n    FETCH_STATIONS_SUCCESS,\r\n    FETCH_STATIONS_FAILURE,\r\n    SEARCH_STATION,\r\n} from \"../actions/stationActions\";\r\n\r\nconst StationReducer = (state = {stations: [], loading: false, search: null}, action) => {\r\n    switch (action.type) {\r\n        case FETCH_STATIONS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case FETCH_STATIONS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                stations: action.payload,\r\n                error: ''\r\n            };\r\n        case FETCH_STATIONS_FAILURE:\r\n            return {\r\n                loading: false,\r\n                stations: [],\r\n                error: action.payload\r\n            };\r\n        case SEARCH_STATION:\r\n            return {\r\n                ...state,\r\n                search: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default StationReducer;","import Axios from \"axios\";\r\n\r\nexport const FETCH_STATIONS_REQUEST = 'FETCH_STATIONS_REQUEST';\r\nexport const FETCH_STATIONS_SUCCESS = 'FETCH_STATIONS_SUCCESS';\r\nexport const FETCH_STATIONS_FAILURE = 'FETCH_STATIONS_FAILURE';\r\nexport const SEARCH_STATION = 'SEARCH_STATION';\r\n\r\nconst fetchStationsRequest = () => {\r\n    return {\r\n        type: FETCH_STATIONS_REQUEST\r\n    }\r\n};\r\n\r\nconst fetchStationsSuccess = stations => {\r\n    return {\r\n        type: FETCH_STATIONS_SUCCESS,\r\n        payload: stations\r\n    }\r\n};\r\n\r\nconst fetchStationsFailure = error => {\r\n    return {\r\n        type: FETCH_STATIONS_FAILURE,\r\n        payload: error\r\n    }\r\n};\r\n\r\nexport const searchStation = search => {\r\n    return  {\r\n        type: SEARCH_STATION,\r\n        payload: search\r\n    }\r\n};\r\n\r\nexport const fetchStations= () => {\r\n    return (dispatch) => {\r\n        dispatch(fetchStationsRequest());\r\n        Axios.get(`${process.env.REACT_APP_API_URI}/api/station`)\r\n            .then(response => {\r\n                dispatch(fetchStationsSuccess(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchStationsFailure(error.message));\r\n            })\r\n    }\r\n};\r\n","import {\r\n    FETCH_ITEMS_STATION_REQUEST,\r\n    FETCH_ITEMS_STATION_SUCCESS,\r\n    FETCH_ITEMS_STATION_FAILURE,\r\n    FETCH_ITEM_PRICES_STATION_REQUEST,\r\n    FETCH_ITEM_PRICES_STATION_SUCCESS,\r\n    CLEAR_ITEMS_STATION,\r\n    SELECT_ITEM_STATION,\r\n    SEARCH_ITEM_STATION,\r\n} from \"../actions/ItemStationActions\";\r\n\r\nconst ItemStationReducer = (state = {station: {items:[]}, loading: false, search: null}, action) => {\r\n    switch (action.type) {\r\n        case FETCH_ITEMS_STATION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case FETCH_ITEMS_STATION_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                station: action.payload,\r\n                error: ''\r\n            };\r\n        case FETCH_ITEMS_STATION_FAILURE:\r\n            return {\r\n                loading: false,\r\n                station: [],\r\n                error: action.payload\r\n            };\r\n        case FETCH_ITEM_PRICES_STATION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case FETCH_ITEM_PRICES_STATION_SUCCESS:\r\n            const clone = require('rfdc')()\r\n            const newStation = clone(state.station)\r\n            let item = newStation.items.find(item => item.id === action.itemId);\r\n            \r\n            item.prices = action.prices\r\n            item.prices.map(price => {\r\n                price.value = parseFloat(price.value)\r\n                return price\r\n            })\r\n\r\n            item['dataChartPrice'] = {\r\n                \"name\": item.name,\r\n                \"data\": Object.keys(item.prices).map(function(name){\r\n                    return [parseInt(item.prices[name]['date']), item.prices[name]['value']];\r\n                })\r\n            }\r\n            return {\r\n                loading: false,\r\n                station: newStation,\r\n                error: ''\r\n            };\r\n        case CLEAR_ITEMS_STATION:\r\n            return {\r\n                loading: false,\r\n                station: {\r\n                    items: []\r\n                }\r\n            }\r\n        case SEARCH_ITEM_STATION:\r\n            return {\r\n                ...state,\r\n                search: action.payload\r\n            }\r\n        case SELECT_ITEM_STATION:\r\n            return {\r\n                ...state,\r\n                selectItem: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ItemStationReducer;","import Axios from \"axios\";\r\n\r\nexport const FETCH_ITEMS_STATION_REQUEST = 'FETCH_ITEMS_STATION_REQUEST';\r\nexport const FETCH_ITEMS_STATION_SUCCESS = 'FETCH_ITEMS_STATION_SUCCESS';\r\nexport const FETCH_ITEMS_STATION_FAILURE = 'FETCH_ITEMS_STATION_FAILURE';\r\nexport const FETCH_ITEM_PRICES_STATION_REQUEST = 'FETCH_ITEM_PRICES_STATION_REQUEST';\r\nexport const FETCH_ITEM_PRICES_STATION_SUCCESS = 'FETCH_ITEM_PRICES_STATION_SUCCESS';\r\nexport const FETCH_ITEM_PRICES_STATION_FAILURE = 'FETCH_ITEM_PRICES_STATION_FAILURE';\r\nexport const CLEAR_ITEMS_STATION = 'CLEAR_ITEMS_STATION';\r\nexport const SEARCH_ITEM_STATION = 'SEARCH_ITEM_STATION';\r\nexport const SELECT_ITEM_STATION = 'SELECT_ITEM_STATION';\r\n\r\nconst fetchItemsStationRequest = () => {\r\n    return {\r\n        type: FETCH_ITEMS_STATION_REQUEST\r\n    }\r\n};\r\n\r\nconst fetchItemsStationFailure = error => {\r\n    return {\r\n        type: FETCH_ITEMS_STATION_FAILURE,\r\n        payload: error\r\n    }\r\n};\r\n\r\n\r\nconst fetchItemsStationSuccess = station => {\r\n    return {\r\n        type: FETCH_ITEMS_STATION_SUCCESS,\r\n        payload: station\r\n    }\r\n};\r\n\r\nconst fetchItemPricesStationRequest = () => {\r\n    return {\r\n        type: FETCH_ITEM_PRICES_STATION_REQUEST\r\n    }\r\n};\r\n\r\nconst fetchItemPricesStationFailure = error => {\r\n    return {\r\n        type: FETCH_ITEM_PRICES_STATION_FAILURE,\r\n        payload: error\r\n    }\r\n};\r\n\r\n\r\nconst fetchItemPricesStationSuccess = ( stationId, itemId, prices ) => {\r\n    return {\r\n        type: FETCH_ITEM_PRICES_STATION_SUCCESS,\r\n        stationId,\r\n        itemId,\r\n        prices\r\n    }\r\n}\r\n\r\nexport const clearItemsStation = () => {\r\n    return {\r\n        type: CLEAR_ITEMS_STATION\r\n    }\r\n}\r\n\r\nexport const searchItemStation = search => {\r\n    return  {\r\n        type: SEARCH_ITEM_STATION,\r\n        payload: search\r\n    }\r\n};\r\n\r\nexport const fetchItemsByStation = (stationId) => {\r\n    return (dispatch) => {\r\n        dispatch(fetchItemsStationRequest());\r\n        Axios.get(`${process.env.REACT_APP_API_URI}/api/station/${stationId}`)\r\n            .then(response => {\r\n                dispatch(fetchItemsStationSuccess(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchItemsStationFailure(error.message));\r\n            })\r\n    }\r\n};\r\n\r\nexport const selectItemStation = item => {\r\n    return {\r\n        type: SELECT_ITEM_STATION,\r\n        payload: item\r\n    }\r\n}\r\n\r\nexport const fetchItemPricesByStation = (stationId, itemId) => {\r\n    return (dispatch) => {\r\n        dispatch(fetchItemPricesStationRequest());\r\n        Axios.get(`${process.env.REACT_APP_API_URI}/api/price/sell/item/${itemId}/station/${stationId}`)\r\n            .then(response => {\r\n                dispatch(fetchItemPricesStationSuccess(stationId, itemId, response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchItemPricesStationFailure(error.message));\r\n            })\r\n    }\r\n}\r\n","import {combineReducers} from \"redux\";\r\nimport ItemReducer from \"./ItemReducer\";\r\nimport StationReducer from \"./StationReducer\";\r\nimport ItemStationReducer from \"./ItemStationReducer\";\r\n\r\nconst allReducers = combineReducers({\r\n   items: ItemReducer,\r\n   stations: StationReducer,\r\n   itemsStation: ItemStationReducer,\r\n});\r\n\r\nexport default allReducers;","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport allReducers from \"./reducers\";\r\n\r\nconst composeEnhancers =\r\n    process.env.NODE_ENV !== 'production' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n            name: 'MyApp', actionsBlacklist: ['REDUX_STORAGE_SAVE']\r\n        }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n    applyMiddleware(thunk),\r\n);\r\n\r\nconst store = createStore(\r\n    allReducers,\r\n    enhancer\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    offset: theme.mixins.toolbar,\r\n    title: {\r\n        flexGrow: 1,\r\n      },\r\n  }))\r\n\r\nfunction Header() {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <AppBar>\r\n                <Container>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            Star-[Data]-Base\r\n                        </Typography>\r\n                        <Button component={RouterLink} to=\"/StarDataBase/stations\" color=\"inherit\">Stations</Button>\r\n                        <Button component={RouterLink} to=\"/StarDataBase/items\" color=\"inherit\">Items</Button>\r\n                    </Toolbar>\r\n                </Container>  \r\n            </AppBar>\r\n            <div className={classes.offset} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n}));\r\n\r\nfunction EnhancedTableHead({ headCells, order, orderBy, onRequestSort }) {\r\n    const classes = useStyles();\r\n\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n  \r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right' : 'left'}\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nexport default EnhancedTableHead;","import React from 'react';\r\nimport { Breadcrumbs, Typography } from '@material-ui/core';\r\n\r\nfunction ItemBreadcrumbs({ item }) {\r\n    return (\r\n        <Breadcrumbs aria-label=\"breadcrumb\" gutterBottom>\r\n            <Typography variant=\"caption\">{item.type.subCategory.category.name}</Typography>\r\n            <Typography variant=\"caption\">{item.type.subCategory.name}</Typography>\r\n            <Typography variant=\"caption\" color=\"textPrimary\">{item.type.name}</Typography>\r\n        </Breadcrumbs>\r\n    )\r\n}\r\n\r\nexport default ItemBreadcrumbs;","import React from 'react';\r\nimport { \r\n    Typography,\r\n    makeStyles,\r\n    Avatar,\r\n    Box,\r\n}  from '@material-ui/core';\r\nimport ItemBreadcrumbs from '../Breadcrumbs/ItemBreadcrumbs';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    section1: {\r\n        margin: theme.spacing(2),\r\n      },\r\n    avatar: {\r\n        width: theme.spacing(15),\r\n        height: theme.spacing(15),\r\n        margin: theme.spacing(1)\r\n    },\r\n}));\r\n\r\nfunction ItemInfo({item}) {\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <div className={classes.section1}>\r\n            <Box display=\"flex\" justifyContent=\"center\">\r\n                <Avatar src={(null !== item.imgPath)  ? `${process.env.REACT_APP_IMG_URI}${item.imgPath}` : item.imgPath} className={classes.avatar}></Avatar>\r\n            </Box>\r\n            <Typography variant=\"h4\">\r\n                {item.name}\r\n            </Typography>\r\n            <ItemBreadcrumbs item={item}/>\r\n            <Typography gutterBottom color=\"textSecondary\" variant=\"body2\">\r\n                {item.description}\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemInfo;","import React, { useState } from 'react';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { useDispatch } from 'react-redux';\r\nimport { selectItem } from '../../actions/ItemActions';\r\nimport { Button, makeStyles, Drawer, Box } from '@material-ui/core';\r\nimport ItemInfo from './ItemInfo';\r\n\r\nconst useStyles = makeStyles({\r\n    drawer: {\r\n      width: 250,\r\n      \"@media (min-width: 500px)\": {\r\n        width: 400,\r\n      }\r\n    }\r\n});\r\n\r\nfunction ItemRow({ item }) {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const [drawer, setDrawer] = useState(false)\r\n    \r\n    const toggleDrawer = (open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n          return;\r\n        }\r\n        dispatch(selectItem(item));\r\n        setDrawer(open);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <TableRow hover>\r\n                <TableCell>\r\n                    <Avatar src={(null !== item.imgPath)  ? `${process.env.REACT_APP_IMG_URI}${item.imgPath}` : item.imgPath}></Avatar>\r\n                </TableCell>\r\n                <TableCell>{item.name}</TableCell>\r\n                <TableCell>{item.type.subCategory.category.name}</TableCell>\r\n                <TableCell>{item.type.subCategory.name}</TableCell>\r\n                <TableCell>{item.type.name}</TableCell>\r\n                <TableCell>{item.rank}</TableCell>\r\n                <TableCell align=\"right\">\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={toggleDrawer(true)}>Show</Button>\r\n                </TableCell>\r\n            </TableRow>\r\n            <Drawer anchor={\"right\"} open={drawer} onClose={toggleDrawer(false)}>\r\n                <Box\r\n                    className={classes.drawer}\r\n                    role=\"presentation\"\r\n                    onClick={toggleDrawer(false)}\r\n                    onKeyDown={toggleDrawer(false)}\r\n                >\r\n                    <ItemInfo item={item}/>\r\n                </Box>\r\n            </Drawer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemRow;","import React, {useEffect, useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport EnhancedTableHead from '../Table/EnhancedTableHead';\r\nimport ItemRow from './ItemRow';\r\n\r\nfunction ItemTable({ headCells }) {\r\n\r\n    const search = useSelector(state => state.items.search);\r\n    const items = useSelector(state => state.items.items);\r\n    const [filteredItems, setFilteredItems] = useState(items);\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('name');\r\n\r\n    useEffect(() => {\r\n        if (items.length > 0 && search) {\r\n            const lowercasedFilter = search.toLowerCase();\r\n            const itemFilters = items.filter(item => {\r\n                return Object.keys(item).some(key => {\r\n                    if (typeof(item[key]) === \"string\") {\r\n                        return item[key].toLowerCase().includes(lowercasedFilter);\r\n                    } else if (typeof(item[key]) === \"number\") {\r\n                        return item[key] === Number(search);\r\n                    }\r\n                    return false;\r\n                }\r\n                    \r\n                );\r\n            });\r\n\r\n            setFilteredItems(itemFilters);\r\n        } else {\r\n            setFilteredItems(items);   \r\n        } \r\n    }, [items, search])\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n          const order = comparator(a[0], b[0]);\r\n          if (order !== 0) return order;\r\n          return a[1] - b[1];\r\n        });\r\n\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n          return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    return (\r\n        <TableContainer component={Paper} variant=\"outlined\">\r\n            <Table size=\"small\">\r\n                <EnhancedTableHead\r\n                    headCells={headCells}\r\n                    order={order}\r\n                    orderBy={orderBy}\r\n                    onRequestSort={handleRequestSort}\r\n                    rowCount={filteredItems.length}\r\n                />\r\n                <TableBody>\r\n                    {filteredItems ? \r\n                    stableSort(filteredItems, getComparator(order, orderBy))\r\n                    .map(item =>\r\n                        <ItemRow\r\n                            key={item.id}\r\n                            item={item}\r\n                        />\r\n                    ) : null} \r\n                </TableBody>  \r\n            </Table>\r\n        </TableContainer> \r\n    )\r\n}\r\n\r\nexport default ItemTable;","import React from 'react';\r\nimport { TextField, InputAdornment} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nfunction SearchForm({ searchHandler }) {\r\n    return (\r\n        <TextField\r\n            id=\"input-with-icon-textfield\"\r\n            label=\"Search\"\r\n            InputProps={{\r\n                startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                        <SearchIcon />\r\n                    </InputAdornment>\r\n                ),\r\n            }}\r\n            fullWidth\r\n            onChange={searchHandler}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SearchForm;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Grid }  from '@material-ui/core';\r\nimport { fetchItems, searchItem } from '../../actions/ItemActions';\r\nimport ItemTable from './ItemTable';\r\nimport SearchForm from '../Search/SearchForm';\r\n\r\nconst headCells = [\r\n    { id: 'image', numeric: false, disablePadding: false, label: '' },\r\n    { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n    { id: 'category', numeric: false, disablePadding: false, label: 'Category' },\r\n    { id: 'subCategory', numeric: false, disablePadding: false, label: 'Sub Category' },\r\n    { id: 'type', numeric: false, disablePadding: false, label: 'Type' },\r\n    { id: 'rank', numeric: false, disablePadding: false, label: 'Rank' },\r\n    { id: 'action', numeric: false, disablePadding: false, label: '' },\r\n  ];\r\n\r\nfunction ItemPage() {\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        dispatch(fetchItems());\r\n    }, [])\r\n\r\n    const searchHandler = (event) => {\r\n        dispatch(searchItem(event.target.value));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={3}>\r\n                <Grid item>\r\n                    <SearchForm searchHandler={searchHandler}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <ItemTable headCells={headCells}/>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemPage;","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport moment from 'moment';\r\nimport Chart from \"react-apexcharts\";\r\nimport fr from \"apexcharts/dist/locales/fr.json\"\r\n\r\nfunction ItemStationCharts() {\r\n    const items = useSelector(state => state.itemsStation.station.items)\r\n    const [series, setSeries] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (items.length > 0) {\r\n            const clone = require('rfdc')()\r\n            const newItems = clone(items)\r\n            let combinedSerie = []\r\n\r\n            newItems.map(item => {\r\n                if (item.dataChartPrice !== undefined && item.dataChartPrice.data.length > 0)  {\r\n                    item.dataChartPrice.data = [...item.dataChartPrice.data, [moment().valueOf(), parseFloat(item.currentSellingPrice)]]\r\n                    combinedSerie = [...combinedSerie, item.dataChartPrice]\r\n                }\r\n                return item\r\n            })\r\n\r\n            setSeries(combinedSerie)\r\n        }\r\n        return () => {\r\n            setSeries([])\r\n        }\r\n    }, [items])\r\n\r\n    const optionsChart = {\r\n        chart: {\r\n            id: 'chart',\r\n            locales: [fr],\r\n            defaultLocale: 'fr',\r\n            animations: {enabled: false},\r\n            zoom: {\r\n                type: \"xy\",\r\n                autoScaleYaxis: true,\r\n            }\r\n        }, \r\n        xaxis: {type: 'datetime'},\r\n        stroke: {curve: 'smooth', width: 2},\r\n        zoom: {enabled: true},\r\n        markers: {size: 0},\r\n        dataLabels: {enabled: false},\r\n    }\r\n\r\n    const optionsBrush = {\r\n        chart: {\r\n            locales: [fr],\r\n            defaultLocale: 'fr',\r\n            selection: {\r\n                enabled: true,\r\n                xaxis: {\r\n                    min: moment().subtract(5, 'days').valueOf(),\r\n                    max: moment().valueOf()\r\n                }\r\n            },\r\n            brush:{\r\n                target: 'chart',\r\n                enabled: true\r\n            },\r\n            animations: {enabled: false}\r\n        }, \r\n        xaxis: {type: 'datetime', tooltip: {enabled: false}},\r\n        yaxis: {tickAmount: 2},\r\n        stroke: {curve: 'smooth'},\r\n        legend: {show: false},\r\n        markers: {size: 0},\r\n        dataLabels: {enabled: false},\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {series.length > 0 ?\r\n            <>\r\n                <Chart\r\n                    options={optionsChart}\r\n                    height=\"300\"\r\n                    series={series}\r\n                    type=\"line\"\r\n                    width=\"100%\"\r\n                />\r\n                <Chart\r\n                    options={optionsBrush}\r\n                    height=\"100\"\r\n                    series={series}\r\n                    type=\"line\"\r\n                    width=\"100%\"\r\n                />\r\n                </>\r\n            : null }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemStationCharts;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport { TrendingDown, TrendingUp, TrendingFlat } from '@material-ui/icons';\r\nimport { red, green } from '@material-ui/core/colors';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    moneyImage: {\r\n        width: 20\r\n    }\r\n}));\r\n\r\nfunction Credit({value, previousValue = null}) {\r\n    const classes = useStyles();\r\n\r\n    const trendingIcon = () => {\r\n        previousValue = (null === previousValue) ? value : previousValue;\r\n\r\n        if (value < previousValue) {\r\n            return <TrendingDown style={{ color: red[500] }}/>;\r\n        } else if (value > previousValue) {\r\n            return <TrendingUp style={{ color: green[500] }}/>\r\n        }\r\n\r\n        return <TrendingFlat/>       \r\n    }\r\n\r\n    return ( \r\n        <Box className={classes.moneyFont} display=\"flex\" alignItems=\"center\" justifyContent=\"flex-end\">\r\n            {value !== undefined ?\r\n                <>\r\n                <Typography variant=\"h6\">\r\n                    {value}\r\n                </Typography>\r\n                    <img className={classes.moneyImage} src={`${process.env.PUBLIC_URL}/img/money.png`} alt=\"Credit\"/>{trendingIcon()}\r\n                </>\r\n            : <Typography variant=\"h6\">N/A</Typography>}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Credit;","import React from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport fr from \"apexcharts/dist/locales/fr.json\"\r\n\r\nfunction ItemChart({dataChartPrice = []}) {\r\n\r\n    const optionsChart = {\r\n        chart: {\r\n            toolbar: {show: false},\r\n            zoom: {enabled: false},\r\n            animations: {enabled: false},\r\n            locales: [fr],\r\n            defaultLocale: 'fr'\r\n        },\r\n        grid: {\r\n            padding: {\r\n              right: 30,\r\n              left: 20\r\n            }\r\n        },\r\n        xaxis: {type: 'datetime', labels: {show: false}},\r\n        yaxis: {labels: {show: false}},\r\n        stroke: {width: 5},\r\n        markers: {size: 0},\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {dataChartPrice.data.length > 1 ?\r\n                <Chart\r\n                    options={optionsChart}\r\n                    height=\"200\"\r\n                    series={[dataChartPrice]}\r\n                    type=\"area\"\r\n                    width=\"100%\"\r\n                />\r\n            : null}  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemChart;","import React from 'react';\r\nimport { \r\n    Typography,\r\n    makeStyles,\r\n    Avatar,\r\n    Box,\r\n    Divider,\r\n}  from '@material-ui/core';\r\nimport ItemBreadcrumbs from '../Breadcrumbs/ItemBreadcrumbs';\r\nimport Credit from '../Credit/Credit';\r\nimport ItemChart from './ItemChart';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    section1: {\r\n      margin: theme.spacing(2),\r\n    },\r\n    avatar: {\r\n        width: theme.spacing(15),\r\n        height: theme.spacing(15),\r\n        margin: theme.spacing(1)\r\n    },\r\n}));\r\n\r\nfunction ItemInfo({item}) {\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <>\r\n            <div className={classes.section1}>\r\n                <Box display=\"flex\" justifyContent=\"center\">\r\n                    <Avatar src={(null !== item.imgPath)  ? `${process.env.REACT_APP_IMG_URI}${item.imgPath}` : item.imgPath} className={classes.avatar}></Avatar>\r\n                </Box>\r\n                <Typography variant=\"h4\">\r\n                    {item.name}\r\n                </Typography>\r\n                <ItemBreadcrumbs item={item}/>\r\n                <Typography gutterBottom color=\"textSecondary\" variant=\"body2\">\r\n                    {item.description}\r\n                </Typography>\r\n                \r\n\r\n            </div>\r\n            <Divider variant=\"middle\"/>\r\n            <div className={classes.section1}>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                    <Typography variant=\"h5\">Selling price</Typography>\r\n                    <Credit value={item.currentSellingPrice} previousValue={item.previousSellingPrice}/>\r\n                </Box>  \r\n                {item.dataChartPrice !== undefined ?\r\n                    <ItemChart dataChartPrice={item.dataChartPrice}/>\r\n                : null}\r\n            </div>\r\n            <Divider variant=\"middle\"/>\r\n            <div className={classes.section1}>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                    <Typography variant=\"h5\">Buying price</Typography>\r\n                    <Credit value={item.currentBuyingPrice} previousValue={item.previousBuyingPrice}/>\r\n                </Box>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemInfo;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Credit from '../Credit/Credit';\r\nimport { LineChart, Line, YAxis } from 'recharts';\r\nimport { fetchItemPricesByStation, selectItemStation } from '../../actions/ItemStationActions';\r\nimport { Button, makeStyles, Drawer, Box } from '@material-ui/core';\r\nimport ItemInfo from './ItemInfo';\r\n\r\nconst useStyles = makeStyles({\r\n    drawer: {\r\n      width: 250,\r\n      \"@media (min-width: 500px)\": {\r\n        width: 400,\r\n      }\r\n    }\r\n});\r\n\r\nfunction ItemStationRow({ item }) {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch();\r\n    const station = useSelector(state => state.itemsStation.station);\r\n    const [drawer, setDrawer] = useState(false)\r\n    \r\n    useEffect(() => {\r\n        dispatch(fetchItemPricesByStation(station.id, item.id))    \r\n    }, [])\r\n\r\n    const toggleDrawer = (open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n          return;\r\n        }\r\n        dispatch(selectItemStation(item));\r\n        setDrawer(open);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <TableRow hover>\r\n                <TableCell>\r\n                    <Avatar src={(null !== item.imgPath)  ? `${process.env.REACT_APP_IMG_URI}${item.imgPath}` : item.imgPath}></Avatar>\r\n                </TableCell>\r\n                <TableCell>{item.name}</TableCell>\r\n                <TableCell>{item.type.subCategory.name}</TableCell>\r\n                <TableCell>{item.type.name}</TableCell>\r\n                <TableCell>\r\n                    {item.prices !== undefined && item.prices.length > 1 ?\r\n                        <LineChart width={100} height={30} data={item.prices}>\r\n                            <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" strokeWidth={2} dot={false} isAnimationActive={false} />\r\n                            <YAxis type=\"number\" hide={true} domain={['auto', 'auto']} />\r\n                        </LineChart>\r\n                    : null}\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                    <Credit value={item.currentSellingPrice} previousValue={item.previousSellingPrice}/>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                    <Credit value={item.currentBuyingPrice} previousValue={item.previousBuyingPrice}/>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={toggleDrawer(true)}>Show</Button>\r\n                </TableCell>\r\n            </TableRow>\r\n            <Drawer anchor={\"right\"} open={drawer} onClose={toggleDrawer(false)}>\r\n                <Box\r\n                    className={classes.drawer}\r\n                    role=\"presentation\"\r\n                    onClick={toggleDrawer(false)}\r\n                    onKeyDown={toggleDrawer(false)}\r\n                >\r\n                    <ItemInfo item={item}/>\r\n                </Box>\r\n            </Drawer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemStationRow;","import React, {useEffect, useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport EnhancedTableHead from '../Table/EnhancedTableHead';\r\nimport ItemStationRow from './ItemStationRow';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\nfunction ItemStationTable({ headCells }) {\r\n\r\n    const search = useSelector(state => state.itemsStation.search);\r\n    const items = useSelector(state => state.itemsStation.station.items);\r\n    const [filteredItems, setFilteredItems] = useState([]);\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('name');\r\n\r\n    useEffect(() => {\r\n        if (items.length > 0 && search) {\r\n            \r\n            const lowercasedFilter = search.toLowerCase();\r\n            const itemFilters = items.filter(item => {\r\n                return Object.keys(item).some(key => {\r\n                        if (typeof(item[key]) === \"string\") {\r\n                            return item[key].toLowerCase().includes(lowercasedFilter);\r\n                        } else if (typeof(item[key]) === \"number\") {\r\n                            return item[key] === Number(search);\r\n                        }\r\n                        return false;\r\n                    }\r\n                );\r\n            });\r\n\r\n            setFilteredItems(itemFilters);\r\n        } else {\r\n            setFilteredItems(items);   \r\n        } \r\n    }, [items, search])\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n          const order = comparator(a[0], b[0]);\r\n          if (order !== 0) return order;\r\n          return a[1] - b[1];\r\n        });\r\n\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n          return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {filteredItems.length > 0 ? \r\n                <TableContainer component={Paper} variant=\"outlined\">\r\n                    <Table size=\"small\">\r\n                        <EnhancedTableHead\r\n                            headCells={headCells}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={filteredItems.length}\r\n                        />\r\n                        <TableBody>\r\n                            {filteredItems ? \r\n                            stableSort(filteredItems, getComparator(order, orderBy))\r\n                            .map(item =>\r\n                                <ItemStationRow\r\n                                    key={item.id}\r\n                                    item={item}\r\n                                />\r\n                            ) : null} \r\n                        </TableBody>  \r\n                    </Table>\r\n                </TableContainer> \r\n            : <Typography variant=\"h5\">No items</Typography> }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemStationTable;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Grid, Typography }  from '@material-ui/core';\r\nimport ItemStationCharts from './ItemStationCharts';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchItemsByStation, clearItemsStation, searchItemStation } from '../../actions/ItemStationActions';\r\nimport ItemStationTable from './ItemStationTable';\r\nimport SearchForm from '../Search/SearchForm';\r\n\r\nconst headCells = [\r\n    { id: 'image', numeric: false, disablePadding: false, label: '' },\r\n    { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n    { id: 'subCategory', numeric: false, disablePadding: false, label: 'Sub Category' },\r\n    { id: 'type', numeric: false, disablePadding: false, label: 'Type' },\r\n    { id: 'priceevo', numeric: false, disablePadding: false, label: 'Sell Price Evo.' },\r\n    { id: 'currentSellingPrice', numeric: true, disablePadding: false, label: 'Sell Price' },\r\n    { id: 'currentBuyingPrice', numeric: true, disablePadding: false, label: 'Buy Price' },\r\n    { id: 'action', numeric: false, disablePadding: false, label: '' },\r\n  ];\r\n\r\nfunction ItemStationPage() {\r\n    let { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const station = useSelector(state => state.itemsStation.station);\r\n    const selectItem = useSelector(state => state.itemsStation.selectItem);\r\n    \r\n    useEffect(() => {\r\n        dispatch(fetchItemsByStation(id));\r\n        return () => {\r\n            dispatch(clearItemsStation());\r\n        }\r\n    }, [id])\r\n\r\n    const searchHandler = (event) => {\r\n        dispatch(searchItemStation(event.target.value));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h3\">\r\n                {station.name}\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <ItemStationCharts/>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item>\r\n                    <SearchForm searchHandler={searchHandler}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <ItemStationTable headCells={headCells}/>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemStationPage;","import React from 'react';\r\nimport { Grid }  from '@material-ui/core';\r\nimport SearchForm from '../Search/SearchForm';\r\nimport { searchStation } from '../../actions/stationActions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nfunction StationPanel() {\r\n    const dispatch = useDispatch();\r\n\r\n    const searchHandler = (event) => {\r\n        dispatch(searchStation(event.target.value));\r\n    }\r\n\r\n    return (\r\n        <Grid item>\r\n            <SearchForm searchHandler={searchHandler}/>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default StationPanel;","import React from 'react';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nfunction StationRow({ id, name }) {    \r\n    return (\r\n        <TableRow hover>\r\n            <TableCell>\r\n                <Typography>\r\n                    {name}\r\n                </Typography>\r\n            </TableCell>\r\n            <TableCell align=\"right\">\r\n                <Button \r\n                    variant=\"contained\" \r\n                    component={RouterLink} \r\n                    to={`/StarDataBase/station/${id}/items`} \r\n                    color=\"primary\"\r\n                >\r\n                    Show items prices\r\n                </Button>\r\n            </TableCell>\r\n        </TableRow>\r\n    )\r\n}\r\n\r\nexport default StationRow;","import React, {useEffect, useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport EnhancedTableHead from '../Table/EnhancedTableHead';\r\nimport StationRow from './StationRow';\r\n\r\nfunction StationTable({ stations, headCells }) {\r\n\r\n    const search = useSelector(state => state.stations.search);\r\n    const [filteredStations, setFilteredStations] = useState(stations);\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('name');\r\n\r\n    useEffect(() => {\r\n        if (stations.length > 0 && search) {\r\n            const lowercasedFilter = search.toLowerCase();\r\n            const stationFilters = stations.filter(station => {\r\n                return Object.keys(station).some(key => {\r\n                    if (typeof(station[key]) === \"string\") {\r\n                        return station[key].toLowerCase().includes(lowercasedFilter);\r\n                    } else if (typeof(station[key]) === \"number\") {\r\n                        return station[key] === Number(search);\r\n                    }\r\n                    return false;\r\n                }\r\n                    \r\n                );\r\n            });\r\n            setFilteredStations(stationFilters);\r\n        } else {\r\n            setFilteredStations(stations);   \r\n        }\r\n    }, [stations, search])\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n          const order = comparator(a[0], b[0]);\r\n          if (order !== 0) return order;\r\n          return a[1] - b[1];\r\n        });\r\n\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n          return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    return (\r\n        <TableContainer component={Paper} variant=\"outlined\">\r\n            <Table>\r\n                <EnhancedTableHead\r\n                    headCells={headCells}\r\n                    order={order}\r\n                    orderBy={orderBy}\r\n                    onRequestSort={handleRequestSort}\r\n                    rowCount={filteredStations.length}\r\n                />\r\n                <TableBody>\r\n                    {filteredStations ? \r\n                    stableSort(filteredStations, getComparator(order, orderBy))\r\n                    .map(station =>\r\n                        <StationRow \r\n                            key={station.id}\r\n                            id={station.id}\r\n                            name={station.name}\r\n                        />\r\n                    ) : null} \r\n                </TableBody>  \r\n            </Table>\r\n        </TableContainer> \r\n    )\r\n}\r\n\r\nexport default StationTable;","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Grid }  from '@material-ui/core';\r\nimport { fetchStations } from '../../actions/stationActions';\r\nimport StationPanel from './StationPanel';\r\nimport StationTable from './StationTable';\r\n\r\nconst headCells = [\r\n    { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n    { id: 'action', numeric: false, disablePadding: false, label: '' },\r\n  ];\r\n\r\nfunction StationPage() {\r\n    const dispatch = useDispatch();\r\n    const stations = useSelector(state => state.stations.stations);\r\n    \r\n    useEffect(() => {\r\n        dispatch(fetchStations());\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={3}>\r\n                <Grid item md={8} xs={12}>\r\n                    <StationTable stations={stations} headCells={headCells}/>\r\n                </Grid>\r\n                <Grid container direction={'column'} spacing={3} item md={4} xs={12}>\r\n                    <StationPanel/>\r\n                </Grid>   \r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StationPage;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Header from './components/Header/Header';\r\nimport ItemPage from './components/Item/ItemPage';\r\nimport ItemStationPage from './components/ItemStation/ItemStationPage';\r\nimport StationPage from './components/Station/StationPage';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        marginTop: 16\r\n    }\r\n}));\r\n\r\nfunction App() {\r\n    const classes = useStyles();\r\n\r\n    return (            \r\n        <Router>\r\n            <Header/>\r\n            <Container className={classes.margin}>\r\n                <Switch>\r\n                    <Route path=\"/StarDataBase/station/:id/items\" component={ItemStationPage} />\r\n                    <Route path=\"/StarDataBase/stations\" component={StationPage} />\r\n                    <Route path=\"/StarDataBase/items\" component={ItemPage} />    \r\n                    <Route path=\"/StarDataBase/\" component={StationPage} />    \r\n                </Switch>\r\n            </Container>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './configureStore';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n      <App/>\n  </Provider>\n  , document.getElementById('root'));\n"],"sourceRoot":""}